{"version":3,"file":"main.js","mappings":"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BxB;AAEK,MAAM,aAAa,GAAG,CAAO,SAAiB,EAAE,EAAE;IACvD,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAC;IACpD,MAAM,cAAc,GAAG,MAAM,sBAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC5D,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC;IAChD,OAAO,cAAc,CAAC;AACxB,CAAC,EAAC;AALW,qBAAa,iBAKxB;;;;;;;;AC7DF;;;;;;ACAA;;AAEA;;AAEA,eAAe,mBAAO,CAAC,EAAe;AACtC,aAAa,mBAAO,CAAC,EAAM;;AAE3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sEAAsE;AACtE;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sEAAsE,qBAAqB;AAC3F,IAAI,gCAAgC,mBAAmB,sBAAsB;AAC7E,2BAA2B,2DAA2D;AACtF,8CAA8C,qCAAqC;AACnF;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,EAAqB;AAC9C,iCAAiC,gBAAgB;AACjD,kCAAkC,gBAAgB;AAClD;;AAEA;AACA;AACA,uDAAuD,kDAAkD;AACzG;AACA;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,2DAA2D;AAC7F,+CAA+C,qCAAqC;AACpF;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,QAAQ;AACR;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,uBAAuB;AAClC,WAAW,gBAAgB;AAC3B,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA,+DAA+D,iDAAiD;AAChH;AACA;AACA,8DAA8D,gBAAgB;AAC9E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,iCAAiC;AACtC;AACA;AACA,WAAW,0BAA0B;AACrC,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;ACreA;AACA,YAAY,mBAAO,CAAC,EAAO;AAC3B,WAAW,mBAAO,CAAC,EAAM;AACzB,eAAe,mBAAO,CAAC,EAAmB;;;AAG1C;AACA;AACA;AACA;AACA,KAAK,oBAAoB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,qCAAqC;AAC5C,yBAAyB;AACzB,OAAO,mEAAmE;AAC1E;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA,WAAW,sBAAsB,mBAAmB;AACpD;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;;;;;;;ACjIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;;;;;;;AC5BA;;;;;;ACAA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,EAAY;;;AAGnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;;;;;;;ACdhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;AC3BA,YAAY,mBAAO,CAAC,EAAa;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;AAGA;;;;;;;;AC/FA;;;;;;ACAA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,EAA0B;AACnD,mBAAmB,mBAAO,CAAC,EAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA,yBAAyB,mBAAO,CAAC,EAAiB;;;AAGlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wBAAwB;AACzD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ;AACR;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA,oBAAoB;AACpB;AACA,QAAQ;AACR;AACA,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;;;;;;AC3FA;AACA;AACA;AACA,WAAW,mBAAO,CAAC,EAAM;AACzB,yBAAyB,mBAAO,CAAC,EAAiB;AAClD,0BAA0B,mBAAO,CAAC,EAA+B;;;AAGjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,wBAAwB;AACxB;AACA,UAAU;AACV,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iDAAiD;AACzF;AACA,wCAAwC,gBAAgB;AACxD;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E,oDAAoD,kBAAkB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sCAAsC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,MAAM;AACX;AACA;;;;;;;;AC5XA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,aAAa,gCAA6B;AAC1C,aAAa,mBAAO,CAAC,EAAQ;AAC7B,aAAa,mBAAO,CAAC,EAAQ;AAC7B,YAAY,mBAAO,CAAC,EAAO;AAC3B,gBAAgB,mBAAO,CAAC,EAAM;AAC9B,gBAAgB,mBAAO,CAAC,EAAY;AACpC,eAAe,mBAAO,CAAC,EAAU;AACjC,gBAAgB,mBAAO,CAAC,EAAkB;AAC1C,UAAU,8BAAwB;;AAElC,aAAa,mBAAO,CAAC,EAAkB;AACvC,kBAAkB,mBAAO,CAAC,EAAkB;AAC5C,cAAc,mBAAO,CAAC,EAAmB;AACzC,YAAY,mBAAO,CAAC,EAAiB;;AAErC;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,aAAa;AACb,cAAc;AACd,eAAe;AACf,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,UAAU;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACprBA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,EAAc;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,EAAQ;;AAE7B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,EAAQ;AAC7B,gBAAgB,mBAAO,CAAC,EAAM;;AAE9B;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,EAAS;AAC7B,WAAW,mBAAO,CAAC,EAAM;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,EAAU;AAC/B,mBAAmB,sCAA8B;AACjD,cAAc,mBAAO,CAAC,EAAW;AACjC,WAAW,mBAAO,CAAC,EAAM;;AAEzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,YAAY,UAAU;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;ACrGA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA,uCAAuC,YAAY;AACnD,sCAAsC,sBAAsB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,SAAS;AACrB;AACA;;AAEA;AACA,6DAA6D;AAC7D;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,SAAS;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,SAAS;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,UAAU;AACrB,YAAY,SAAS;AACrB;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;AC7IA,0EAAoD;AAEpD,MAAM,mBAAmB,GAAG,CAAC,QAAwB,EAAQ,EAAE;IAC7D,4BAAoB,EAAC,QAAQ,CAAC,CAAC;AACjC,CAAC,CAAC;AAEF,qBAAe,mBAAmB,CAAC;;;;;;;;;;ACNnC,0DAAqE;AAErE,MAAM,oBAAoB,GAAG,CAAC,QAAwB,EAAQ,EAAE;IAC9D,QAAQ,CAAC,GAAG,CACV,IAAI,kCAAc,CAChB;QACE,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,mBAA6B;QACnD,YAAY,EAAE,OAAO,CAAC,GAAG,CAAC,uBAAiC;QAC3D,WAAW,EAAE,4CAA4C;KAC1D,EACD,CAAC,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE;QACzC,+GAA+G;QAC/G,OAAO,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC3B,CAAC,CACF,CACF,CAAC;IAEF,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAS,EAAE,IAAI,EAAE,EAAE;QACzC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,CAAC,CAAC,GAAQ,EAAE,IAAI,EAAE,EAAE;QAC1C,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,qBAAe,oBAAoB,CAAC;;;;;;;AC3BpC;AACA,eAAe,mBAAO,CAAC,EAAY;;;AAGnC;AACA;;AAEA;AACA,gBAAgB;;;;;;;ACRhB;AACA,qBAAqB,mBAAO,CAAC,EAAiB;AAC9C,WAAW,mBAAO,CAAC,EAAM;AACzB,UAAU,mBAAO,CAAC,EAAK;AACvB,wBAAwB,mBAAO,CAAC,EAAsB;AACtD,oBAAoB,mBAAO,CAAC,EAAkB;AAC9C,yBAAyB,4CAA6C;AACtE,yBAAyB,mBAAO,CAAC,EAA6B;AAC9D,oBAAoB,mBAAO,CAAC,EAAwB;;;AAGpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,yCAAyC;AACzC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;ACtMA;AACA,eAAe,mBAAO,CAAC,EAAY;AACnC,yBAAyB,mBAAO,CAAC,EAA6B;AAC9D,iBAAiB,mBAAO,CAAC,EAAqB;AAC9C,yBAAyB,mBAAO,CAAC,EAA6B;;;AAG9D;AACA;;AAEA;AACA,gBAAgB;;AAEhB,0BAA0B;AAC1B,kBAAkB;AAClB,0BAA0B;;;;;;;ACf1B;AACA,eAAe,mBAAO,CAAC,EAAmB;AAC1C,UAAU,mBAAO,CAAC,EAAK;AACvB,UAAU,mBAAO,CAAC,EAAM;AACxB,aAAa,mBAAO,CAAC,EAAQ;AAC7B,gBAAgB,mBAAO,CAAC,EAAW;AACnC,WAAW,mBAAO,CAAC,EAAM;AACzB,YAAY,mBAAO,CAAC,EAAS;AAC7B,aAAa,gCAAuB;AACpC,gBAAgB,mBAAO,CAAC,EAAc;AACtC,iBAAiB,mBAAO,CAAC,EAAiB;AAC1C,iBAAiB,mBAAO,CAAC,EAAe;AACxC,qBAAqB,mBAAO,CAAC,EAAqB;AAClD,yBAAyB,mBAAO,CAAC,EAA6B;AAC9D,iBAAiB,mBAAO,CAAC,EAAqB;AAC9C,yBAAyB,mBAAO,CAAC,EAA6B;;;AAG9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB,mCAAmC;AACnC,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,2DAA2D,gBAAgB,qBAAqB,gBAAgB;AAChH,IAAI;AACJ,2DAA2D,gBAAgB,qBAAqB,gBAAgB;AAChH,IAAI;AACJ,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,sCAAsC;AAC/D,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,yBAAyB;AAClF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yBAAyB;AACzB,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB,8BAA8B;;AAE9B;AACA,uBAAuB;;AAEvB;AACA,yBAAyB;AACzB,2BAA2B;;AAE3B;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,OAAO;AACf;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA,uBAAuB;AACvB;AACA;AACA,kCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,mBAAmB;;AAEnB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU,OAAO;AACjB;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,mBAAmB;AACnB;AACA,KAAK;AACL,IAAI;AACJ;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,YAAY;AACZ;AACA;;;AAGA;AACA;;;;;;;;AC5aA;;;;;;ACAA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,EAAQ;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,cAAc,kBAAkB;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACtDA,mDAAoD;AACpD,yBAAsB;;;;;;;;ACDT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,mBAAO,CAAC,EAAc;AACzC;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;;;ACpCF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;;ACnBf,uCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA,6CAA4C;AAC5C,qDAAoD;AACpD,+CAA+C;;;;;;ACF/C,YAAY,mBAAO,CAAC,EAAQ;AAC5B,UAAU,mBAAO,CAAC,EAAQ;AAC1B,UAAU,mBAAO,CAAC,EAAM;AACxB,WAAW,mBAAO,CAAC,EAAO;AAC1B,SAAS,mBAAO,CAAC,EAAK;AACtB,iBAAiB,mBAAO,CAAC,EAAa;AACtC,gBAAgB,mBAAO,CAAC,EAAU;;AAElC,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA,2BAA2B;;AAE3B,qCAAqC;AACrC;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA,wGAAwG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA,kBAAkB,8BAA8B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,+CAA+C;AAC/C;AACA;AACA,cAAc,wBAAwB;AACtC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,uBAAuB,6CAA6C;AACpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wCAAwC;AACxC;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,4CAA4C;AAC5C;AACA;;AAEA,iCAA8B;AAC9B;AACA;;AAEA,2BAA2B;AAC3B;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,2BAA2B;AAC3B;AACA;;AAEA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,+BAA+B;;AAE/B;AACA;AACA;;AAEA,iGAAiG;AACjG;;AAEA;AACA,kBAAkB,8BAA8B;AAChD;AACA;AACA;;AAEA;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;;AAEA,iGAAiG;AACjG;AACA;;;;;;;ACpkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,qCAAqC;AACvD,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,UAAU,WAAW;AAC7B;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,SAAS,WAAW;AAC5B;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,QAAQ;AACzC;;AAEA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;;;;;;AC7UA;;;;;;;ACAA;;;;;;ACAA;AACA,iCAAiC;AACjC;AACA;;;;;;ACHA,iBAAiB,mBAAO,CAAC,EAAa;AACtC,YAAY,mBAAO,CAAC,EAAQ;AAC5B,WAAW,mBAAO,CAAC,EAAO;AAC1B,UAAU,mBAAO,CAAC,EAAM;AACxB,SAAS,mBAAO,CAAC,EAAK;AACtB,gBAAgB,mBAAO,CAAC,EAAU;;AAElC,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA;;;AAGA;AACA;AACA,qDAAqD;AACrD;AACA;;AAEA,2CAA2C;AAC3C,gDAAgD,0CAA0C;AAC1F;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAA+C;AAClE,QAAQ;AACR;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,GAAG;AACH;;AAEA;AACA,6CAA6C;AAC7C,8BAA8B;AAC9B;;AAEA,4BAA4B;AAC5B;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxOA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;;;;;ACZA,UAAU,mBAAO,CAAC,EAAM;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,mCAAmC,0DAA0D;AAC7F;;AAEA;AACA;AACA,mCAAmC,0DAA0D;AAC7F;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,iDAAiD;AACpF;;AAEA;AACA;;AAEA;AACA;;;;;;;ACpFA,UAAU,mBAAO,CAAC,EAAM;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA,eAAe;AACf,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,mCAAmC,0DAA0D;AAC7F;;AAEA;AACA;AACA,mCAAmC,0DAA0D;AAC7F;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,iDAAiD;AACpF;;AAEA;AACA;;AAEA;AACA;;;;;;;ACvFA,UAAU,mBAAO,CAAC,EAAM;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,mCAAmC,0DAA0D;AAC7F;;AAEA;AACA;AACA,mCAAmC,0DAA0D;AAC7F;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,iDAAiD;AACpF;;AAEA;AACA;;AAEA;AACA;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,yCAAyC;AACzC,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD,4BAA4B,wDAAwD;AACpF;AACA;AACA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","sources":["webpack://empathic-core/external commonjs \"tslib\"","webpack://empathic-core/external commonjs \"express\"","webpack://empathic-core/external node-commonjs \"path\"","webpack://empathic-core/./src/routes/firebase-routes.ts","webpack://empathic-core/./src/routes/user-routes.ts","webpack://empathic-core/./src/models/true-self-user.ts","webpack://empathic-core/external commonjs \"firebase/firestore\"","webpack://empathic-core/external commonjs \"firebase/auth\"","webpack://empathic-core/./src/config/firebase-config.ts","webpack://empathic-core/external commonjs \"firebase/app\"","webpack://empathic-core/./src/models/stripe-customer.ts","webpack://empathic-core/./src/config/stripe-config.ts","webpack://empathic-core/external commonjs \"stripe\"","webpack://empathic-core/./src/routes/firebase-test-routes.ts","webpack://empathic-core/./src/routes/stripe-routes.ts","webpack://empathic-core/./src/services/subscriptions.ts","webpack://empathic-core/./src/routes/stripe-sub-product-routes.ts","webpack://empathic-core/./src/models/stripe-subscription-products.ts","webpack://empathic-core/./src/routes/stripe-customer-routes.ts","webpack://empathic-core/./src/routes/stripe-product-routes.ts","webpack://empathic-core/./src/models/stripe-products.ts","webpack://empathic-core/external commonjs \"body-parser\"","webpack://empathic-core/./node_modules/cors/lib/index.js","webpack://empathic-core/external commonjs \"object-assign\"","webpack://empathic-core/external commonjs \"vary\"","webpack://empathic-core/external commonjs \"dotenv\"","webpack://empathic-core/./src/routes/google-auth-routes.ts","webpack://empathic-core/./node_modules/passport/lib/index.js","webpack://empathic-core/./node_modules/passport/lib/authenticator.js","webpack://empathic-core/./node_modules/passport/lib/strategies/session.js","webpack://empathic-core/./node_modules/pause/index.js","webpack://empathic-core/external node-commonjs \"util\"","webpack://empathic-core/./node_modules/passport-strategy/lib/index.js","webpack://empathic-core/./node_modules/passport-strategy/lib/strategy.js","webpack://empathic-core/./node_modules/passport/lib/sessionmanager.js","webpack://empathic-core/external commonjs \"utils-merge\"","webpack://empathic-core/./node_modules/passport/lib/framework/connect.js","webpack://empathic-core/./node_modules/passport/lib/middleware/initialize.js","webpack://empathic-core/./node_modules/passport/lib/http/request.js","webpack://empathic-core/./node_modules/passport/lib/middleware/authenticate.js","webpack://empathic-core/external node-commonjs \"http\"","webpack://empathic-core/./node_modules/passport/lib/errors/authenticationerror.js","webpack://empathic-core/./node_modules/express-session/index.js","webpack://empathic-core/external commonjs \"safe-buffer\"","webpack://empathic-core/external commonjs \"cookie\"","webpack://empathic-core/external node-commonjs \"crypto\"","webpack://empathic-core/external commonjs \"debug\"","webpack://empathic-core/external commonjs \"depd\"","webpack://empathic-core/external commonjs \"on-headers\"","webpack://empathic-core/external commonjs \"parseurl\"","webpack://empathic-core/external commonjs \"cookie-signature\"","webpack://empathic-core/./node_modules/uid-safe/index.js","webpack://empathic-core/./node_modules/random-bytes/index.js","webpack://empathic-core/./node_modules/express-session/session/cookie.js","webpack://empathic-core/./node_modules/express-session/session/memory.js","webpack://empathic-core/./node_modules/express-session/session/store.js","webpack://empathic-core/external commonjs \"events\"","webpack://empathic-core/./node_modules/express-session/session/session.js","webpack://empathic-core/./src/auth/index.ts","webpack://empathic-core/./src/auth/googleStrategy.ts","webpack://empathic-core/./node_modules/passport-google-oauth20/lib/index.js","webpack://empathic-core/./node_modules/passport-google-oauth20/lib/strategy.js","webpack://empathic-core/./node_modules/passport-oauth2/lib/index.js","webpack://empathic-core/./node_modules/passport-oauth2/lib/strategy.js","webpack://empathic-core/external node-commonjs \"url\"","webpack://empathic-core/./node_modules/uid2/index.js","webpack://empathic-core/./node_modules/base64url/index.js","webpack://empathic-core/./node_modules/base64url/dist/base64url.js","webpack://empathic-core/./node_modules/base64url/dist/pad-string.js","webpack://empathic-core/./node_modules/passport-oauth2/lib/utils.js","webpack://empathic-core/./node_modules/oauth/index.js","webpack://empathic-core/./node_modules/oauth/lib/oauth.js","webpack://empathic-core/./node_modules/oauth/lib/sha1.js","webpack://empathic-core/external node-commonjs \"https\"","webpack://empathic-core/external node-commonjs \"querystring\"","webpack://empathic-core/./node_modules/oauth/lib/_utils.js","webpack://empathic-core/./node_modules/oauth/lib/oauth2.js","webpack://empathic-core/./node_modules/passport-oauth2/lib/state/null.js","webpack://empathic-core/./node_modules/passport-oauth2/lib/state/session.js","webpack://empathic-core/./node_modules/passport-oauth2/lib/state/store.js","webpack://empathic-core/./node_modules/passport-oauth2/lib/state/pkcesession.js","webpack://empathic-core/./node_modules/passport-oauth2/lib/errors/authorizationerror.js","webpack://empathic-core/./node_modules/passport-oauth2/lib/errors/tokenerror.js","webpack://empathic-core/./node_modules/passport-oauth2/lib/errors/internaloautherror.js","webpack://empathic-core/./node_modules/passport-google-oauth20/lib/profile/googleplus.js","webpack://empathic-core/./node_modules/passport-google-oauth20/lib/profile/openid.js","webpack://empathic-core/./node_modules/passport-google-oauth20/lib/errors/googleplusapierror.js","webpack://empathic-core/./node_modules/passport-google-oauth20/lib/errors/userinfoerror.js","webpack://empathic-core/webpack/bootstrap","webpack://empathic-core/./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"express\");","module.exports = require(\"path\");","import { Express } from 'express';\nimport { userRoutes } from './user-routes';\nimport { firebaseTestRoutes } from './firebase-test-routes';\n\nexport const setUpFireBaseRoutes = (app: Express) => {\n  firebaseTestRoutes(app);\n  userRoutes(app);\n};\n","import { Express } from 'express';\nimport {\n  createUser,\n  deleteUser,\n  getUser,\n  loginUser,\n  updateUser,\n} from '../models/true-self-user';\n\nexport const userRoutes = (app: Express) => {\n  // Create User\n  app.post('/users/register', async (req, res) => {\n    const { email, password, userData } = req.body;\n    try {\n      // If user does not exist, create the user\n      const user = await createUser(email, password, userData);\n      res.status(200).send({ user, message: 'User created successfully' });\n    } catch (error) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // Login User\n  app.post('/users/login', async (req, res) => {\n    const { email, password } = req.body;\n    try {\n      const userCredential = await loginUser(email, password);\n      res\n        .status(200)\n        .send({ userCredential, message: 'User logged in successfully' });\n    } catch (error) {\n      res.status(401).send(error.message);\n    }\n  });\n\n  // Get User Data\n  app.get('/users/:userId', async (req, res) => {\n    try {\n      const userData = await getUser(req.params.userId);\n      if (userData) {\n        res.status(200).send(userData);\n      } else {\n        res.status(404).send({ message: 'User not found' });\n      }\n    } catch (error) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // Update User Data\n  app.put('/users/:userId', async (req, res) => {\n    try {\n      await updateUser(req.params.userId, req.body);\n      res.status(200).send({ message: 'User updated successfully' });\n    } catch (error) {\n      res.status(400).send(error.message);\n    }\n  });\n\n  // Delete User\n  app.delete('/users/:userId', async (req, res) => {\n    try {\n      await deleteUser(req.params.userId);\n      res.status(200).send({ message: 'User deleted successfully' });\n    } catch (error) {\n      res.status(400).send(error.message);\n    }\n  });\n};\n","import {\n  doc,\n  setDoc,\n  getDoc,\n  updateDoc,\n  deleteDoc,\n  collection,\n  getDocs,\n  query,\n  where,\n} from 'firebase/firestore';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n} from 'firebase/auth';\nimport { FireBase } from '../config/firebase-config';\nimport { TrueSelfUserInterface } from '../interfaces/true-self-user-interface';\nimport { createCustomer } from './stripe-customer';\n\nconst db = FireBase.db;\nconst auth = FireBase.auth;\n\nexport const checkFirestoreForEmail = async (email: string) => {\n  const usersRef = collection(db, 'users');\n  const querySnapshot = await getDocs(\n    query(usersRef, where('email', '==', email))\n  );\n  return !querySnapshot.empty; // returns true if email exists\n};\n\n// Create a new user\n// user created glaK6LQwKnOU0KmRXKH6tQd7B2q2\nexport const createUser = async (\n  email,\n  password,\n  userData: TrueSelfUserInterface\n) => {\n  const emailExists = await checkFirestoreForEmail(email);\n  if (emailExists) {\n    throw new Error('Email already exists.');\n  }\n  // Proceed with creating the user\n  const userCredential = await createUserWithEmailAndPassword(\n    auth,\n    email,\n    password\n  );\n  const user = userCredential.user;\n  userData.email = email; // Store email in Firestore for future checks\n  const customer = await createCustomer(userData.email, userData.name);\n  await setDoc(doc(db, 'users', user.uid), {\n    ...userData,\n    stripe_customer_id: customer.id,\n  });\n\n  console.log('User created and data stored in Firestore:', user.uid);\n};\n\n// Read (get) a user's data\nexport const getUser = async (userId: string) => {\n  try {\n    const docRef = doc(db, 'users', userId);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      console.log('User data:', docSnap.data());\n      return docSnap.data();\n    } else {\n      console.log('No such user!');\n      return null;\n    }\n  } catch (error) {\n    console.error('Error getting user data: ', error);\n  }\n};\n\n// Method to get a user ID by email\nexport const getUserIdByEmail = async (\n  email: string\n): Promise<string | null> => {\n  const usersRef = collection(db, 'users');\n  const q = query(usersRef, where('email', '==', email));\n  const querySnapshot = await getDocs(q);\n\n  if (!querySnapshot.empty) {\n    // Assuming each email is unique and can only have one document\n    const doc = querySnapshot.docs[0];\n    console.log('User ID found:', doc.id);\n    return doc.id; // returns the user ID\n  } else {\n    console.log('No user found with that email');\n    return null; // no user found\n  }\n};\n\n// Update a user's data\nexport const updateUser = async (\n  userId: string,\n  updatedUserData: Partial<TrueSelfUserInterface>\n) => {\n  try {\n    const userRef = doc(db, 'users', userId);\n    await updateDoc(userRef, updatedUserData);\n    console.log('User successfully updated.');\n  } catch (error) {\n    console.error('Error updating user: ', error);\n  }\n};\n\n// Delete a user\nexport const deleteUser = async (userId: string) => {\n  try {\n    await deleteDoc(doc(db, 'users', userId));\n    console.log('User successfully deleted.');\n  } catch (error) {\n    console.error('Error deleting user: ', error);\n  }\n};\n\n// Login a user\nexport const loginUser = async (email: string, password: string) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    console.log('User logged in:', userCredential.user);\n    return userCredential;\n    // You can return userCredential if needed\n  } catch (error) {\n    console.error('Error logging in user:', error);\n    // Handle errors (e.g., user not found, wrong password)\n  }\n};\n\n// Method to log out a user\nexport const logoutUser = async () => {\n  try {\n    await signOut(auth);\n    console.log('User successfully logged out.');\n  } catch (error) {\n    console.error('Error logging out:', error);\n  }\n};\n","module.exports = require(\"firebase/firestore\");","module.exports = require(\"firebase/auth\");","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\n\nclass FirebaseInstance {\n  public app;\n  public db;\n  public auth;\n\n  public config = {\n    apiKey: process.env.NX_FIREBASE_API_KEY,\n    authDomain: process.env.NX_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.NX_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.NX_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.NX_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.NX_FIREBASE_APP_ID,\n  };\n\n  constructor() {\n    try {\n      this.app = initializeApp(this.config);\n      this.db = getFirestore(this.db);\n      this.auth = getAuth(this.app);\n    } catch (err) {\n      return err;\n    }\n  }\n\n  public getFireBaseApp = () => this.app;\n  public getFireBaseDb = () => this.db;\n  public getConfig = () => this.config;\n  public getAuth = () => this.auth;\n}\n\nexport const FireBase = new FirebaseInstance();\nexport const db = FireBase.db;\nexport const auth = FireBase.auth;\n","module.exports = require(\"firebase/app\");","import Stripe from 'stripe';\nimport { stripe } from '../config/stripe-config';\n\nexport const createCustomer = async (\n  email: string,\n  name: string\n): Promise<Stripe.Customer> => {\n  const customer = await stripe.customers.create({\n    email: email,\n    name: name,\n    payment_method: 'pm_card_visa',\n  });\n  console.log('Customer created:', customer);\n  return customer;\n};\n\nexport const getCustomer = async (\n  customerId: string\n): Promise<Stripe.Customer | Stripe.DeletedCustomer | null> => {\n  try {\n    const customer = await stripe.customers.retrieve(customerId);\n    console.log('Customer retrieved:', customer);\n    return customer;\n  } catch (error) {\n    console.error('Error retrieving customer:', error);\n    return null;\n  }\n};\n\nexport const updateCustomer = async (\n  customerId: string,\n  updates: Stripe.CustomerUpdateParams\n): Promise<Stripe.Customer | null> => {\n  try {\n    const customer = await stripe.customers.update(customerId, updates);\n    console.log('Customer updated:', customer);\n    return customer;\n  } catch (error) {\n    console.error('Error updating customer:', error);\n    return null;\n  }\n};\n\nexport const deleteCustomer = async (\n  customerId: string\n): Promise<Stripe.DeletedCustomer | null> => {\n  try {\n    const deleted = await stripe.customers.del(customerId);\n    console.log('Customer deleted:', deleted);\n    return deleted;\n  } catch (error) {\n    console.error('Error deleting customer:', error);\n    return null;\n  }\n};\n","import Stripe from 'stripe';\n\nexport const stripe = new Stripe(process.env.NX_STRIPE_TEST_SECRET_KEY, {\n  apiVersion: '2023-10-16',\n});\n","module.exports = require(\"stripe\");","import { Express } from 'express';\nimport { FireBase } from '../config/firebase-config';\nimport { doc, getDoc } from 'firebase/firestore';\n\nexport const firebaseTestRoutes = (app: Express) => {\n  app.get('/test', async (req, res) => {\n    res.send({ ok: 'here', config: FireBase.config });\n  });\n\n  app.get('/test-firebase', async (req, res) => {\n    try {\n      const testDocRef = doc(FireBase.db, 'test', 'testDoc');\n      const testDoc = await getDoc(testDocRef);\n\n      if (testDoc.exists()) {\n        console.log('Document data:', testDoc.data());\n        res.send(\n          'Firebase connection is successful. Document data: ' +\n            JSON.stringify(testDoc.data())\n        );\n      } else {\n        console.log('No such document!');\n        res.send('Firebase connection is successful, but no such document!');\n      }\n    } catch (error) {\n      console.error('Error connecting to Firestore:', error);\n      res.status(500).send('Error testing Firebase connection');\n    }\n  });\n};\n","import { Express, Request, Response } from 'express';\nimport { createSubscription } from '../services/subscriptions';\nimport Stripe from 'stripe';\nimport { getUserIdByEmail, updateUser } from '../models/true-self-user';\nimport { setUpStripeSubscriptionProductRoutes } from './stripe-sub-product-routes';\nimport { setUpStripeCustomerRoutes } from './stripe-customer-routes';\nimport { setUpStripeProductRoutes } from './stripe-product-routes';\nimport { stripe } from '../config/stripe-config';\n\nexport const setUpStripeRoutes = (app: Express) => {\n  // Publishable Key\n  app.get('/config-stripe', async (req: Request, res: Response) => {\n    res.send({ publishableKey: process.env.NX_STRIPE_TEST_PUBLISHABLE_KEY });\n  });\n\n  // Subscribe\n  app.post('/subscribe', async (req: Request, res: Response) => {\n    const { customerId, priceId } = req.body;\n\n    try {\n      const subscription = await createSubscription(customerId, priceId);\n      res.status(200).json({ success: true, subscription });\n    } catch (error) {\n      res.status(500).json({ success: false, error: error.message });\n    }\n  });\n\n  // Payment Intenet\n  app.post('/create-payment-intent', async (req, res) => {\n    const { amount } = req.body;\n    try {\n      const paymentIntent = await stripe.paymentIntents.create({\n        amount: amount, // amount in cents\n        currency: 'usd',\n        // additional settings can be added here such as receipt_email, etc.\n      });\n\n      res.send({\n        clientSecret: paymentIntent.client_secret,\n      });\n    } catch (error) {\n      res.status(400).send({\n        error: {\n          message: error.message,\n        },\n      });\n    }\n  });\n\n  // Create Subscription\n  app.post('/create-subscription', async (req, res) => {\n    const { customerId, priceId } = req.body;\n\n    try {\n      // Ensure the customer has a payment method attached or create a new SetupIntent\n      const setupIntent = await stripe.setupIntents.create({\n        customer: customerId,\n        usage: 'off_session', // Indicate that the payment method will be used later\n      });\n\n      // Create the subscription\n      const subscription = await stripe.subscriptions.create({\n        customer: customerId,\n        items: [{ price: priceId }],\n        expand: ['latest_invoice.payment_intent'], // To get the client secret\n      });\n\n      const clientSecret =\n        //@ts-ignore\n        subscription.latest_invoice.payment_intent.client_secret;\n\n      res.send({\n        clientSecret: clientSecret,\n        subscriptionId: subscription.id,\n      });\n    } catch (error) {\n      res.status(400).send({\n        error: {\n          message: error.message,\n        },\n      });\n    }\n  });\n\n  // Create Customer\n  app.post('/create-customer', async (req, res) => {\n    const { name, email } = req.body; // Extract name and email from the request body\n\n    try {\n      const customer = await stripe.customers.create({\n        name: name,\n        email: email,\n        // You can also add other fields like address, phone, etc.\n      });\n      const userId = await getUserIdByEmail(email);\n\n      updateUser(userId, { stripe_customer_ref_id: customer.id });\n\n      // Customer has been created, and you can now return the customer ID\n      res.status(201).send({\n        message: 'Customer created successfully',\n        customerId: customer, // This is the Stripe Customer ID\n      });\n    } catch (error) {\n      console.error('Error creating customer:', error);\n      res.status(400).send({\n        message: 'Failed to create customer',\n        error: error.message,\n      });\n    }\n  });\n  setUpStripeCustomerRoutes(app);\n  setUpStripeSubscriptionProductRoutes(app);\n  setUpStripeProductRoutes(app);\n};\n","import { stripe } from '../config/stripe-config';\n\nexport const createSubscription = async (\n  customerId: string,\n  priceId: string\n) => {\n  try {\n    const subscription = await stripe.subscriptions.create({\n      customer: customerId,\n      items: [{ price: priceId }],\n    });\n    return subscription;\n  } catch (error) {\n    console.error('Error creating subscription', error);\n    throw error;\n  }\n};\n","import { Express } from 'express';\n\nimport {\n  createSubscriptionProduct,\n  deleteSubscriptionProduct,\n  getSubscriptionProduct,\n  updateSubscriptionProduct,\n} from '../models/stripe-subscription-products';\n\nexport const setUpStripeSubscriptionProductRoutes = (app: Express) => {\n  // Create a new subscription product\n  app.post('/subscription-products/create', async (req, res) => {\n    try {\n      const { productName, description, amount, currency, interval } = req.body;\n      const result = await createSubscriptionProduct({\n        productName,\n        description,\n        amount,\n        currency,\n        interval,\n      });\n      res.status(201).json(result);\n    } catch (error) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Retrieve a subscription product and its prices\n  app.get('/subscription-products/:productId', async (req, res) => {\n    try {\n      const productId = req.params.productId;\n      const result = await getSubscriptionProduct(productId);\n      res.status(200).json(result);\n    } catch (error) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Update a subscription product\n  app.patch('/subscription-products/:productId', async (req, res) => {\n    try {\n      const productId = req.params.productId;\n      const updates = req.body;\n      const result = await updateSubscriptionProduct(productId, updates);\n      res.status(200).json(result);\n    } catch (error) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Delete a subscription product\n  app.delete('/subscription-products/:productId', async (req, res) => {\n    try {\n      const productId = req.params.productId;\n      const result = await deleteSubscriptionProduct(productId);\n      res.status(204).json(result);\n    } catch (error) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n};\n","import { stripe } from '../config/stripe-config';\n\ninterface CreateSubscriptionProductParams {\n  productName: string;\n  description: string;\n  amount: number; // Amount should be in the smallest currency unit (e.g., cents)\n  currency: string;\n  interval: 'day' | 'week' | 'month' | 'year'; // Restrict interval to valid recurring options\n}\n\nexport const createSubscriptionProduct = async ({\n  productName,\n  description,\n  amount,\n  currency,\n  interval,\n}: CreateSubscriptionProductParams) => {\n  console.log('Creating subscription product:', productName);\n  const product = await stripe.products.create({\n    name: productName,\n    description,\n  });\n  console.log('Product created:', product);\n\n  console.log('Creating price for product:', product.id);\n  const price = await stripe.prices.create({\n    unit_amount: amount,\n    currency,\n    recurring: { interval },\n    product: product.id,\n  });\n  console.log('Price created:', price);\n\n  return { product, price };\n};\n\nexport const getSubscriptionProduct = async (productId: string) => {\n  console.log('Retrieving subscription product with ID:', productId);\n  const product = await stripe.products.retrieve(productId);\n  const prices = await stripe.prices.list({\n    product: productId,\n  });\n  console.log('Product details:', product, 'Prices:', prices);\n\n  return { product, prices };\n};\n\ninterface UpdateProductParams {\n  name?: string;\n  description?: string;\n  active?: boolean; // This field can be used to archive/unarchive a product\n  metadata?: Record<string, string>; // Optional metadata that can be attached to the product\n}\n\nexport const updateSubscriptionProduct = async (\n  productId: string,\n  updates: UpdateProductParams\n) => {\n  console.log('Updating subscription product with ID:', productId);\n  const updatedProduct = await stripe.products.update(productId, updates);\n  console.log('Product updated:', updatedProduct);\n  return updatedProduct;\n};\n\nexport const deleteSubscriptionProduct = async (productId: string) => {\n  console.log('Deleting subscription product with ID:', productId);\n  const deletedProduct = await stripe.products.del(productId);\n  console.log('Product deleted:', deletedProduct);\n  return deletedProduct;\n};\n","import { Express } from 'express';\nimport {\n  createCustomer,\n  getCustomer,\n  updateCustomer,\n  deleteCustomer,\n} from '../models/stripe-customer';\n\nexport const setUpStripeCustomerRoutes = (app: Express) => {\n  // Create a new customer\n  app.post('/customers', async (req, res) => {\n    try {\n      const { email, name } = req.body;\n      const customer = await createCustomer(email, name);\n      res.status(201).json(customer);\n    } catch (error) {\n      console.error('Failed to create customer:', error);\n      res.status(500).json({ error: 'Failed to create customer' });\n    }\n  });\n\n  // Retrieve a specific customer by their ID\n  app.get('/customers/:customerId', async (req, res) => {\n    try {\n      const customerId = req.params.customerId;\n      const customer = await getCustomer(customerId);\n      if (customer) {\n        res.status(200).json(customer);\n      } else {\n        res.status(404).json({ error: 'Customer not found' });\n      }\n    } catch (error) {\n      console.error('Failed to retrieve customer:', error);\n      res.status(500).json({ error: 'Failed to retrieve customer' });\n    }\n  });\n\n  // Update a specific customer\n  app.put('/customers/:customerId', async (req, res) => {\n    try {\n      const customerId = req.params.customerId;\n      const updates = req.body;\n      const customer = await updateCustomer(customerId, updates);\n      if (customer) {\n        res.status(200).json(customer);\n      } else {\n        res.status(404).json({ error: 'Customer not found' });\n      }\n    } catch (error) {\n      console.error('Failed to update customer:', error);\n      res.status(500).json({ error: 'Failed to update customer' });\n    }\n  });\n\n  // Delete a specific customer\n  app.delete('/customers/:customerId', async (req, res) => {\n    try {\n      const customerId = req.params.customerId;\n      const deletedCustomer = await deleteCustomer(customerId);\n      if (deletedCustomer) {\n        res.status(204).json(deletedCustomer);\n      } else {\n        res.status(404).json({ error: 'Customer not found' });\n      }\n    } catch (error) {\n      console.error('Failed to delete customer:', error);\n      res.status(500).json({ error: 'Failed to delete customer' });\n    }\n  });\n};\n","import { Express } from 'express';\nimport {\n  createProduct,\n  getProduct,\n  updateProduct,\n  deleteProduct,\n} from '../models/stripe-products';\n\nexport const setUpStripeProductRoutes = (app: Express) => {\n  // Create a new product\n  app.post('/products', async (req, res) => {\n    try {\n      const { name, description } = req.body;\n      const product = await createProduct({ name, description });\n      res.status(201).json(product);\n    } catch (error) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Retrieve a specific product by its ID\n  app.get('/products/:productId', async (req, res) => {\n    try {\n      const productId = req.params.productId;\n      const product = await getProduct(productId);\n      res.status(200).json(product);\n    } catch (error) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Update a specific product by its ID\n  app.put('/products/:productId', async (req, res) => {\n    try {\n      const { productId } = req.params;\n      const { newName, newDescription } = req.body;\n      const updatedProduct = await updateProduct({\n        productId,\n        newName,\n        newDescription,\n      });\n      res.status(200).json(updatedProduct);\n    } catch (error) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Delete a specific product by its ID\n  app.delete('/products/:productId', async (req, res) => {\n    try {\n      const productId = req.params.productId;\n      const deletedProduct = await deleteProduct(productId);\n      res.status(204).json(deletedProduct);\n    } catch (error) {\n      res.status(500).json({ error: error.message });\n    }\n  });\n};\n","import { stripe } from '../config/stripe-config';\n\ninterface ProductParams {\n  name: string;\n  description: string;\n}\n\nexport const createProduct = async ({ name, description }: ProductParams) => {\n  console.log(\n    'Creating product with name:',\n    name,\n    'and description:',\n    description\n  );\n  const product = await stripe.products.create({\n    name,\n    description,\n  });\n  console.log('Product created:', product);\n  return product;\n};\n\nexport const getProduct = async (productId: string) => {\n  console.log('Retrieving product with ID:', productId);\n  const product = await stripe.products.retrieve(productId);\n  console.log('Product retrieved:', product);\n  return product;\n};\n\ninterface UpdateProductParams {\n  productId: string;\n  newName: string;\n  newDescription: string;\n}\n\nexport const updateProduct = async ({\n  productId,\n  newName,\n  newDescription,\n}: UpdateProductParams) => {\n  console.log(\n    'Updating product with ID:',\n    productId,\n    'to new name:',\n    newName,\n    'and new description:',\n    newDescription\n  );\n  const updatedProduct = await stripe.products.update(productId, {\n    name: newName,\n    description: newDescription,\n  });\n  console.log('Product updated:', updatedProduct);\n  return updatedProduct;\n};\n\nexport const deleteProduct = async (productId: string) => {\n  console.log('Deleting product with ID:', productId);\n  const deletedProduct = await stripe.products.del(productId);\n  console.log('Product deleted:', deletedProduct);\n  return deletedProduct;\n};\n","module.exports = require(\"body-parser\");","(function () {\n\n  'use strict';\n\n  var assign = require('object-assign');\n  var vary = require('vary');\n\n  var defaults = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204\n  };\n\n  function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n  }\n\n  function isOriginAllowed(origin, allowedOrigin) {\n    if (Array.isArray(allowedOrigin)) {\n      for (var i = 0; i < allowedOrigin.length; ++i) {\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\n          return true;\n        }\n      }\n      return false;\n    } else if (isString(allowedOrigin)) {\n      return origin === allowedOrigin;\n    } else if (allowedOrigin instanceof RegExp) {\n      return allowedOrigin.test(origin);\n    } else {\n      return !!allowedOrigin;\n    }\n  }\n\n  function configureOrigin(options, req) {\n    var requestOrigin = req.headers.origin,\n      headers = [],\n      isAllowed;\n\n    if (!options.origin || options.origin === '*') {\n      // allow any origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }]);\n    } else if (isString(options.origin)) {\n      // fixed origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: options.origin\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    } else {\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\n      // reflect origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: isAllowed ? requestOrigin : false\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureMethods(options) {\n    var methods = options.methods;\n    if (methods.join) {\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\n    }\n    return {\n      key: 'Access-Control-Allow-Methods',\n      value: methods\n    };\n  }\n\n  function configureCredentials(options) {\n    if (options.credentials === true) {\n      return {\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      };\n    }\n    return null;\n  }\n\n  function configureAllowedHeaders(options, req) {\n    var allowedHeaders = options.allowedHeaders || options.headers;\n    var headers = [];\n\n    if (!allowedHeaders) {\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\n      headers.push([{\n        key: 'Vary',\n        value: 'Access-Control-Request-Headers'\n      }]);\n    } else if (allowedHeaders.join) {\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\n    }\n    if (allowedHeaders && allowedHeaders.length) {\n      headers.push([{\n        key: 'Access-Control-Allow-Headers',\n        value: allowedHeaders\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureExposedHeaders(options) {\n    var headers = options.exposedHeaders;\n    if (!headers) {\n      return null;\n    } else if (headers.join) {\n      headers = headers.join(','); // .headers is an array, so turn it into a string\n    }\n    if (headers && headers.length) {\n      return {\n        key: 'Access-Control-Expose-Headers',\n        value: headers\n      };\n    }\n    return null;\n  }\n\n  function configureMaxAge(options) {\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString()\n    if (maxAge && maxAge.length) {\n      return {\n        key: 'Access-Control-Max-Age',\n        value: maxAge\n      };\n    }\n    return null;\n  }\n\n  function applyHeaders(headers, res) {\n    for (var i = 0, n = headers.length; i < n; i++) {\n      var header = headers[i];\n      if (header) {\n        if (Array.isArray(header)) {\n          applyHeaders(header, res);\n        } else if (header.key === 'Vary' && header.value) {\n          vary(res, header.value);\n        } else if (header.value) {\n          res.setHeader(header.key, header.value);\n        }\n      }\n    }\n  }\n\n  function cors(options, req, res, next) {\n    var headers = [],\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n    if (method === 'OPTIONS') {\n      // preflight\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureMethods(options, req));\n      headers.push(configureAllowedHeaders(options, req));\n      headers.push(configureMaxAge(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n\n      if (options.preflightContinue) {\n        next();\n      } else {\n        // Safari (and potentially other browsers) need content-length 0,\n        //   for 204 or they just hang waiting for a body\n        res.statusCode = options.optionsSuccessStatus;\n        res.setHeader('Content-Length', '0');\n        res.end();\n      }\n    } else {\n      // actual response\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options, req));\n      headers.push(configureExposedHeaders(options, req));\n      applyHeaders(headers, res);\n      next();\n    }\n  }\n\n  function middlewareWrapper(o) {\n    // if options are static (either via defaults or custom options passed in), wrap in a function\n    var optionsCallback = null;\n    if (typeof o === 'function') {\n      optionsCallback = o;\n    } else {\n      optionsCallback = function (req, cb) {\n        cb(null, o);\n      };\n    }\n\n    return function corsMiddleware(req, res, next) {\n      optionsCallback(req, function (err, options) {\n        if (err) {\n          next(err);\n        } else {\n          var corsOptions = assign({}, defaults, options);\n          var originCallback = null;\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\n            originCallback = corsOptions.origin;\n          } else if (corsOptions.origin) {\n            originCallback = function (origin, cb) {\n              cb(null, corsOptions.origin);\n            };\n          }\n\n          if (originCallback) {\n            originCallback(req.headers.origin, function (err2, origin) {\n              if (err2 || !origin) {\n                next(err2);\n              } else {\n                corsOptions.origin = origin;\n                cors(corsOptions, req, res, next);\n              }\n            });\n          } else {\n            next();\n          }\n        }\n      });\n    };\n  }\n\n  // can pass either an options hash, an options delegate, or nothing\n  module.exports = middlewareWrapper;\n\n}());\n","module.exports = require(\"object-assign\");","module.exports = require(\"vary\");","module.exports = require(\"dotenv\");","// googleAuthRoutes.ts\nimport { Express, Request, Response } from 'express';\nimport passport from 'passport';\n\nconst setupGoogleRoutes = (app: Express) => {\n  app.get(\n    '/auth/google',\n    passport.authenticate('google', { scope: ['profile', 'email'] })\n  );\n\n  app.get(\n    '/auth/google/callback',\n    passport.authenticate('google', { failureRedirect: '/login' }),\n    (req, res) => {\n      // Successful authentication, redirect home or to another page\n      //@ts-ignore\n      if (req.user) {\n        // Ensure the user object exists and has the data needed\n        //@ts-ignore\n        const userEmail = encodeURIComponent(req.user.email);\n        //@ts-ignore\n        const userToken = encodeURIComponent(req.user.token); // Assuming the token is stored in user object\n\n        // Redirect with user information\n        res.redirect(\n          `http://localhost:4200/?auth=success&email=${userEmail}&token=${userToken}`\n        );\n      } else {\n        // Handle case where user information is not available\n        res.redirect('/login');\n      }\n    }\n  );\n\n  app.get('/success', (req: Request, res: Response) => {\n    //@ts-ignore\n    if (req.isAuthenticated()) {\n      //@ts-ignore\n      res.send(`<h1>Success! Welcome ${req.user.displayName}</h1>`);\n    } else {\n      res.redirect('/');\n    }\n  });\n\n  app.get('/auth/session', (req, res) => {\n    //@ts-ignore\n    if (req.isAuthenticated()) {\n      //@ts-ignore\n      res.status(200).json({ isAuthenticated: true, user: req.user });\n    } else {\n      res.status(200).json({ isAuthenticated: false });\n    }\n  });\n\n  // Logout route\n  app.get('/logout', (req, res) => {\n    //@ts-ignore\n    req.logout();\n    //@ts-ignore\n    req.session.destroy(); // Optional: destroys the session\n    res.redirect('http://localhost:4200');\n  });\n};\n\nexport default setupGoogleRoutes;\n","// Module dependencies.\nvar Passport = require('./authenticator')\n  , SessionStrategy = require('./strategies/session');\n\n\n/**\n * Export default singleton.\n *\n * @api public\n */\nexports = module.exports = new Passport();\n\n/**\n * Expose constructors.\n */\nexports.Passport =\nexports.Authenticator = Passport;\nexports.Strategy = require('passport-strategy');\n\n/*\n * Expose strategies.\n */\nexports.strategies = {};\nexports.strategies.SessionStrategy = SessionStrategy;\n","// Module dependencies.\nvar SessionStrategy = require('./strategies/session')\n  , SessionManager = require('./sessionmanager');\n\n\n/**\n * Create a new `Authenticator` object.\n *\n * @public\n * @class\n */\nfunction Authenticator() {\n  this._key = 'passport';\n  this._strategies = {};\n  this._serializers = [];\n  this._deserializers = [];\n  this._infoTransformers = [];\n  this._framework = null;\n  \n  this.init();\n}\n\n/**\n * Initialize authenticator.\n *\n * Initializes the `Authenticator` instance by creating the default `{@link SessionManager}`,\n * {@link Authenticator#use `use()`}'ing the default `{@link SessionStrategy}`, and\n * adapting it to work as {@link https://github.com/senchalabs/connect#readme Connect}-style\n * middleware, which is also compatible with {@link https://expressjs.com/ Express}.\n *\n * @private\n */\nAuthenticator.prototype.init = function() {\n  this.framework(require('./framework/connect')());\n  this.use(new SessionStrategy({ key: this._key }, this.deserializeUser.bind(this)));\n  this._sm = new SessionManager({ key: this._key }, this.serializeUser.bind(this));\n};\n\n/**\n * Register a strategy for later use when authenticating requests.  The name\n * with which the strategy is registered is passed to {@link Authenticator#authenticate `authenticate()`}.\n *\n * @public\n * @param {string} [name=strategy.name] - Name of the strategy.  When specified,\n *          this value overrides the strategy's name.\n * @param {Strategy} strategy - Authentication strategy.\n * @returns {this}\n *\n * @example <caption>Register strategy.</caption>\n * passport.use(new GoogleStrategy(...));\n *\n * @example <caption>Register strategy and override name.</caption>\n * passport.use('password', new LocalStrategy(function(username, password, cb) {\n *   // ...\n * }));\n */\nAuthenticator.prototype.use = function(name, strategy) {\n  if (!strategy) {\n    strategy = name;\n    name = strategy.name;\n  }\n  if (!name) { throw new Error('Authentication strategies must have a name'); }\n  \n  this._strategies[name] = strategy;\n  return this;\n};\n\n/**\n * Deregister a strategy that was previously registered with the given name.\n *\n * In a typical application, the necessary authentication strategies are\n * registered when initializing the app and, once registered, are always\n * available.  As such, it is typically not necessary to call this function.\n *\n * @public\n * @param {string} name - Name of the strategy.\n * @returns {this}\n *\n * @example\n * passport.unuse('acme');\n */\nAuthenticator.prototype.unuse = function(name) {\n  delete this._strategies[name];\n  return this;\n};\n\n/**\n * Adapt this `Authenticator` to work with a specific framework.\n *\n * By default, Passport works as {@link https://github.com/senchalabs/connect#readme Connect}-style\n * middleware, which makes it compatible with {@link https://expressjs.com/ Express}.\n * For any app built using Express, there is no need to call this function.\n *\n * @public\n * @param {Object} fw\n * @returns {this}\n */\nAuthenticator.prototype.framework = function(fw) {\n  this._framework = fw;\n  return this;\n};\n\n/**\n * Create initialization middleware.\n *\n * Returns middleware that initializes Passport to authenticate requests.\n *\n * As of v0.6.x, it is typically no longer necessary to use this middleware.  It\n * exists for compatiblity with apps built using previous versions of Passport,\n * in which this middleware was necessary.\n *\n * The primary exception to the above guidance is when using strategies that\n * depend directly on `passport@0.4.x` or earlier.  These earlier versions of\n * Passport monkeypatch Node.js `http.IncomingMessage` in a way that expects\n * certain Passport-specific properties to be available.  This middleware\n * provides a compatibility layer for this situation.\n *\n * @public\n * @param {Object} [options]\n * @param {string} [options.userProperty='user'] - Determines what property on\n *          `req` will be set to the authenticated user object.\n * @param {boolean} [options.compat=true] - When `true`, enables a compatibility\n *          layer for packages that depend on `passport@0.4.x` or earlier.\n * @returns {function}\n *\n * @example\n * app.use(passport.initialize());\n */\nAuthenticator.prototype.initialize = function(options) {\n  options = options || {};\n  return this._framework.initialize(this, options);\n};\n\n/**\n * Create authentication middleware.\n *\n * Returns middleware that authenticates the request by applying the given\n * strategy (or strategies).\n *\n * Examples:\n *\n *     passport.authenticate('local', function(err, user) {\n *       if (!user) { return res.redirect('/login'); }\n *       res.end('Authenticated!');\n *     })(req, res);\n *\n * @public\n * @param {string|string[]|Strategy} strategy\n * @param {Object} [options]\n * @param {boolean} [options.session=true]\n * @param {boolean} [options.keepSessionInfo=false]\n * @param {string} [options.failureRedirect]\n * @param {boolean|string|Object} [options.failureFlash=false]\n * @param {boolean|string} [options.failureMessage=false]\n * @param {boolean|string|Object} [options.successFlash=false]\n * @param {string} [options.successReturnToOrRedirect]\n * @param {string} [options.successRedirect]\n * @param {boolean|string} [options.successMessage=false]\n * @param {boolean} [options.failWithError=false]\n * @param {string} [options.assignProperty]\n * @param {boolean} [options.authInfo=true]\n * @param {function} [callback]\n * @returns {function}\n *\n * @example <caption>Authenticate username and password submitted via HTML form.</caption>\n * app.get('/login/password', passport.authenticate('local', { successRedirect: '/', failureRedirect: '/login' }));\n *\n * @example <caption>Authenticate bearer token used to access an API resource.</caption>\n * app.get('/api/resource', passport.authenticate('bearer', { session: false }));\n */\nAuthenticator.prototype.authenticate = function(strategy, options, callback) {\n  return this._framework.authenticate(this, strategy, options, callback);\n};\n\n/**\n * Create third-party service authorization middleware.\n *\n * Returns middleware that will authorize a connection to a third-party service.\n *\n * This middleware is identical to using {@link Authenticator#authenticate `authenticate()`}\n * middleware with the `assignProperty` option set to `'account'`.  This is\n * useful when a user is already authenticated (for example, using a username\n * and password) and they want to connect their account with a third-party\n * service.\n *\n * In this scenario, the user's third-party account will be set at\n * `req.account`, and the existing `req.user` and login session data will be\n * be left unmodified.  A route handler can then link the third-party account to\n * the existing local account.\n *\n * All arguments to this function behave identically to those accepted by\n * `{@link Authenticator#authenticate}`.\n *\n * @public\n * @param {string|string[]|Strategy} strategy\n * @param {Object} [options]\n * @param {function} [callback]\n * @returns {function}\n *\n * @example\n * app.get('/oauth/callback/twitter', passport.authorize('twitter'));\n */\nAuthenticator.prototype.authorize = function(strategy, options, callback) {\n  options = options || {};\n  options.assignProperty = 'account';\n  \n  var fn = this._framework.authorize || this._framework.authenticate;\n  return fn(this, strategy, options, callback);\n};\n\n/**\n * Middleware that will restore login state from a session.\n *\n * Web applications typically use sessions to maintain login state between\n * requests.  For example, a user will authenticate by entering credentials into\n * a form which is submitted to the server.  If the credentials are valid, a\n * login session is established by setting a cookie containing a session\n * identifier in the user's web browser.  The web browser will send this cookie\n * in subsequent requests to the server, allowing a session to be maintained.\n *\n * If sessions are being utilized, and a login session has been established,\n * this middleware will populate `req.user` with the current user.\n *\n * Note that sessions are not strictly required for Passport to operate.\n * However, as a general rule, most web applications will make use of sessions.\n * An exception to this rule would be an API server, which expects each HTTP\n * request to provide credentials in an Authorization header.\n *\n * Examples:\n *\n *     app.use(connect.cookieParser());\n *     app.use(connect.session({ secret: 'keyboard cat' }));\n *     app.use(passport.initialize());\n *     app.use(passport.session());\n *\n * Options:\n *   - `pauseStream`      Pause the request stream before deserializing the user\n *                        object from the session.  Defaults to _false_.  Should\n *                        be set to true in cases where middleware consuming the\n *                        request body is configured after passport and the\n *                        deserializeUser method is asynchronous.\n *\n * @param {Object} options\n * @return {Function} middleware\n * @api public\n */\nAuthenticator.prototype.session = function(options) {\n  return this.authenticate('session', options);\n};\n\n// TODO: Make session manager pluggable\n/*\nAuthenticator.prototype.sessionManager = function(mgr) {\n  this._sm = mgr;\n  return this;\n}\n*/\n\n/**\n * Registers a function used to serialize user objects into the session.\n *\n * Examples:\n *\n *     passport.serializeUser(function(user, done) {\n *       done(null, user.id);\n *     });\n *\n * @api public\n */\nAuthenticator.prototype.serializeUser = function(fn, req, done) {\n  if (typeof fn === 'function') {\n    return this._serializers.push(fn);\n  }\n  \n  // private implementation that traverses the chain of serializers, attempting\n  // to serialize a user\n  var user = fn;\n\n  // For backwards compatibility\n  if (typeof req === 'function') {\n    done = req;\n    req = undefined;\n  }\n  \n  var stack = this._serializers;\n  (function pass(i, err, obj) {\n    // serializers use 'pass' as an error to skip processing\n    if ('pass' === err) {\n      err = undefined;\n    }\n    // an error or serialized object was obtained, done\n    if (err || obj || obj === 0) { return done(err, obj); }\n    \n    var layer = stack[i];\n    if (!layer) {\n      return done(new Error('Failed to serialize user into session'));\n    }\n    \n    \n    function serialized(e, o) {\n      pass(i + 1, e, o);\n    }\n    \n    try {\n      var arity = layer.length;\n      if (arity == 3) {\n        layer(req, user, serialized);\n      } else {\n        layer(user, serialized);\n      }\n    } catch(e) {\n      return done(e);\n    }\n  })(0);\n};\n\n/**\n * Registers a function used to deserialize user objects out of the session.\n *\n * Examples:\n *\n *     passport.deserializeUser(function(id, done) {\n *       User.findById(id, function (err, user) {\n *         done(err, user);\n *       });\n *     });\n *\n * @api public\n */\nAuthenticator.prototype.deserializeUser = function(fn, req, done) {\n  if (typeof fn === 'function') {\n    return this._deserializers.push(fn);\n  }\n  \n  // private implementation that traverses the chain of deserializers,\n  // attempting to deserialize a user\n  var obj = fn;\n\n  // For backwards compatibility\n  if (typeof req === 'function') {\n    done = req;\n    req = undefined;\n  }\n  \n  var stack = this._deserializers;\n  (function pass(i, err, user) {\n    // deserializers use 'pass' as an error to skip processing\n    if ('pass' === err) {\n      err = undefined;\n    }\n    // an error or deserialized user was obtained, done\n    if (err || user) { return done(err, user); }\n    // a valid user existed when establishing the session, but that user has\n    // since been removed\n    if (user === null || user === false) { return done(null, false); }\n    \n    var layer = stack[i];\n    if (!layer) {\n      return done(new Error('Failed to deserialize user out of session'));\n    }\n    \n    \n    function deserialized(e, u) {\n      pass(i + 1, e, u);\n    }\n    \n    try {\n      var arity = layer.length;\n      if (arity == 3) {\n        layer(req, obj, deserialized);\n      } else {\n        layer(obj, deserialized);\n      }\n    } catch(e) {\n      return done(e);\n    }\n  })(0);\n};\n\n/**\n * Registers a function used to transform auth info.\n *\n * In some circumstances authorization details are contained in authentication\n * credentials or loaded as part of verification.\n *\n * For example, when using bearer tokens for API authentication, the tokens may\n * encode (either directly or indirectly in a database), details such as scope\n * of access or the client to which the token was issued.\n *\n * Such authorization details should be enforced separately from authentication.\n * Because Passport deals only with the latter, this is the responsiblity of\n * middleware or routes further along the chain.  However, it is not optimal to\n * decode the same data or execute the same database query later.  To avoid\n * this, Passport accepts optional `info` along with the authenticated `user`\n * in a strategy's `success()` action.  This info is set at `req.authInfo`,\n * where said later middlware or routes can access it.\n *\n * Optionally, applications can register transforms to proccess this info,\n * which take effect prior to `req.authInfo` being set.  This is useful, for\n * example, when the info contains a client ID.  The transform can load the\n * client from the database and include the instance in the transformed info,\n * allowing the full set of client properties to be convieniently accessed.\n *\n * If no transforms are registered, `info` supplied by the strategy will be left\n * unmodified.\n *\n * Examples:\n *\n *     passport.transformAuthInfo(function(info, done) {\n *       Client.findById(info.clientID, function (err, client) {\n *         info.client = client;\n *         done(err, info);\n *       });\n *     });\n *\n * @api public\n */\nAuthenticator.prototype.transformAuthInfo = function(fn, req, done) {\n  if (typeof fn === 'function') {\n    return this._infoTransformers.push(fn);\n  }\n  \n  // private implementation that traverses the chain of transformers,\n  // attempting to transform auth info\n  var info = fn;\n\n  // For backwards compatibility\n  if (typeof req === 'function') {\n    done = req;\n    req = undefined;\n  }\n  \n  var stack = this._infoTransformers;\n  (function pass(i, err, tinfo) {\n    // transformers use 'pass' as an error to skip processing\n    if ('pass' === err) {\n      err = undefined;\n    }\n    // an error or transformed info was obtained, done\n    if (err || tinfo) { return done(err, tinfo); }\n    \n    var layer = stack[i];\n    if (!layer) {\n      // if no transformers are registered (or they all pass), the default\n      // behavior is to use the un-transformed info as-is\n      return done(null, info);\n    }\n    \n    \n    function transformed(e, t) {\n      pass(i + 1, e, t);\n    }\n    \n    try {\n      var arity = layer.length;\n      if (arity == 1) {\n        // sync\n        var t = layer(info);\n        transformed(null, t);\n      } else if (arity == 3) {\n        layer(req, info, transformed);\n      } else {\n        layer(info, transformed);\n      }\n    } catch(e) {\n      return done(e);\n    }\n  })(0);\n};\n\n/**\n * Return strategy with given `name`. \n *\n * @param {String} name\n * @return {Strategy}\n * @api private\n */\nAuthenticator.prototype._strategy = function(name) {\n  return this._strategies[name];\n};\n\n\n/**\n * Expose `Authenticator`.\n */\nmodule.exports = Authenticator;\n","// Module dependencies.\nvar pause = require('pause')\n  , util = require('util')\n  , Strategy = require('passport-strategy');\n\n\n/**\n *  Create a new `SessionStrategy` object.\n *\n * An instance of this strategy is automatically used when creating an\n * `{@link Authenticator}`.  As such, it is typically unnecessary to create an\n * instance using this constructor.\n *\n * @classdesc This `Strategy` authenticates HTTP requests based on the contents\n * of session data.\n *\n * The login session must have been previously initiated, typically upon the\n * user interactively logging in using a HTML form.  During session initiation,\n * the logged-in user's information is persisted to the session so that it can\n * be restored on subsequent requests.\n *\n * Note that this strategy merely restores the authentication state from the\n * session, it does not authenticate the session itself.  Authenticating the\n * underlying session is assumed to have been done by the middleware\n * implementing session support.  This is typically accomplished by setting a\n * signed cookie, and verifying the signature of that cookie on incoming\n * requests.\n *\n * In {@link https://expressjs.com/ Express}-based apps, session support is\n * commonly provided by {@link https://github.com/expressjs/session `express-session`}\n * or {@link https://github.com/expressjs/cookie-session `cookie-session`}.\n *\n * @public\n * @class\n * @augments base.Strategy\n * @param {Object} [options]\n * @param {string} [options.key='passport'] - Determines what property (\"key\") on\n *          the session data where login session data is located.  The login\n *          session is stored and read from `req.session[key]`.\n * @param {function} deserializeUser - Function which deserializes user.\n */\nfunction SessionStrategy(options, deserializeUser) {\n  if (typeof options == 'function') {\n    deserializeUser = options;\n    options = undefined;\n  }\n  options = options || {};\n  \n  Strategy.call(this);\n  \n  /** The name of the strategy, set to `'session'`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  this.name = 'session';\n  this._key = options.key || 'passport';\n  this._deserializeUser = deserializeUser;\n}\n\n// Inherit from `passport.Strategy`.\nutil.inherits(SessionStrategy, Strategy);\n\n/**\n * Authenticate request based on current session data.\n *\n * When login session data is present in the session, that data will be used to\n * restore login state across across requests by calling the deserialize user\n * function.\n *\n * If login session data is not present, the request will be passed to the next\n * middleware, rather than failing authentication - which is the behavior of\n * most other strategies.  This deviation allows session authentication to be\n * performed at the application-level, rather than the individual route level,\n * while allowing both authenticated and unauthenticated requests and rendering\n * responses accordingly.  Routes that require authentication will need to guard\n * that condition.\n *\n * This function is protected, and should not be called directly.  Instead,\n * use `passport.authenticate()` middleware and specify the {@link SessionStrategy#name `name`}\n * of this strategy and any options.\n *\n * @protected\n * @param {http.IncomingMessage} req - The Node.js {@link https://nodejs.org/api/http.html#class-httpincomingmessage `IncomingMessage`}\n *          object.\n * @param {Object} [options]\n * @param {boolean} [options.pauseStream=false] - When `true`, data events on\n *          the request will be paused, and then resumed after the asynchronous\n *          `deserializeUser` function has completed.  This is only necessary in\n *          cases where later middleware in the stack are listening for events,\n *          and ensures that those events are not missed.\n *\n * @example\n * passport.authenticate('session');\n */\nSessionStrategy.prototype.authenticate = function(req, options) {\n  if (!req.session) { return this.error(new Error('Login sessions require session support. Did you forget to use `express-session` middleware?')); }\n  options = options || {};\n\n  var self = this, \n      su;\n  if (req.session[this._key]) {\n    su = req.session[this._key].user;\n  }\n\n  if (su || su === 0) {\n    // NOTE: Stream pausing is desirable in the case where later middleware is\n    //       listening for events emitted from request.  For discussion on the\n    //       matter, refer to: https://github.com/jaredhanson/passport/pull/106\n    \n    var paused = options.pauseStream ? pause(req) : null;\n    this._deserializeUser(su, req, function(err, user) {\n      if (err) { return self.error(err); }\n      if (!user) {\n        delete req.session[self._key].user;\n      } else {\n        var property = req._userProperty || 'user';\n        req[property] = user;\n      }\n      self.pass();\n      if (paused) {\n        paused.resume();\n      }\n    });\n  } else {\n    self.pass();\n  }\n};\n\n// Export `SessionStrategy`.\nmodule.exports = SessionStrategy;\n","\nmodule.exports = function(obj){\n  var onData\n    , onEnd\n    , events = [];\n\n  // buffer data\n  obj.on('data', onData = function(data, encoding){\n    events.push(['data', data, encoding]);\n  });\n\n  // buffer end\n  obj.on('end', onEnd = function(data, encoding){\n    events.push(['end', data, encoding]);\n  });\n\n  return {\n    end: function(){\n      obj.removeListener('data', onData);\n      obj.removeListener('end', onEnd);\n    },\n    resume: function(){\n      this.end();\n      for (var i = 0, len = events.length; i < len; ++i) {\n        obj.emit.apply(obj, events[i]);\n      }\n    }\n  };\n};","module.exports = require(\"util\");","/**\n * Module dependencies.\n */\nvar Strategy = require('./strategy');\n\n\n/**\n * Expose `Strategy` directly from package.\n */\nexports = module.exports = Strategy;\n\n/**\n * Export constructors.\n */\nexports.Strategy = Strategy;\n","/**\n * Creates an instance of `Strategy`.\n *\n * @constructor\n * @api public\n */\nfunction Strategy() {\n}\n\n/**\n * Authenticate request.\n *\n * This function must be overridden by subclasses.  In abstract form, it always\n * throws an exception.\n *\n * @param {Object} req The request to authenticate.\n * @param {Object} [options] Strategy-specific options.\n * @api public\n */\nStrategy.prototype.authenticate = function(req, options) {\n  throw new Error('Strategy#authenticate must be overridden by subclass');\n};\n\n\n/**\n * Expose `Strategy`.\n */\nmodule.exports = Strategy;\n","var merge = require('utils-merge');\n\nfunction SessionManager(options, serializeUser) {\n  if (typeof options == 'function') {\n    serializeUser = options;\n    options = undefined;\n  }\n  options = options || {};\n  \n  this._key = options.key || 'passport';\n  this._serializeUser = serializeUser;\n}\n\nSessionManager.prototype.logIn = function(req, user, options, cb) {\n  if (typeof options == 'function') {\n    cb = options;\n    options = {};\n  }\n  options = options || {};\n  \n  if (!req.session) { return cb(new Error('Login sessions require session support. Did you forget to use `express-session` middleware?')); }\n  \n  var self = this;\n  var prevSession = req.session;\n  \n  // regenerate the session, which is good practice to help\n  // guard against forms of session fixation\n  req.session.regenerate(function(err) {\n    if (err) {\n      return cb(err);\n    }\n    \n    self._serializeUser(user, req, function(err, obj) {\n      if (err) {\n        return cb(err);\n      }\n      if (options.keepSessionInfo) {\n        merge(req.session, prevSession);\n      }\n      if (!req.session[self._key]) {\n        req.session[self._key] = {};\n      }\n      // store user information in session, typically a user id\n      req.session[self._key].user = obj;\n      // save the session before redirection to ensure page\n      // load does not happen before session is saved\n      req.session.save(function(err) {\n        if (err) {\n          return cb(err);\n        }\n        cb();\n      });\n    });\n  });\n}\n\nSessionManager.prototype.logOut = function(req, options, cb) {\n  if (typeof options == 'function') {\n    cb = options;\n    options = {};\n  }\n  options = options || {};\n  \n  if (!req.session) { return cb(new Error('Login sessions require session support. Did you forget to use `express-session` middleware?')); }\n  \n  var self = this;\n  \n  // clear the user from the session object and save.\n  // this will ensure that re-using the old session id\n  // does not have a logged in user\n  if (req.session[this._key]) {\n    delete req.session[this._key].user;\n  }\n  var prevSession = req.session;\n  \n  req.session.save(function(err) {\n    if (err) {\n      return cb(err)\n    }\n  \n    // regenerate the session, which is good practice to help\n    // guard against forms of session fixation\n    req.session.regenerate(function(err) {\n      if (err) {\n        return cb(err);\n      }\n      if (options.keepSessionInfo) {\n        merge(req.session, prevSession);\n      }\n      cb();\n    });\n  });\n}\n\n\nmodule.exports = SessionManager;\n","module.exports = require(\"utils-merge\");","/**\n * Module dependencies.\n */\nvar initialize = require('../middleware/initialize')\n  , authenticate = require('../middleware/authenticate');\n  \n/**\n * Framework support for Connect/Express.\n *\n * This module provides support for using Passport with Express.  It exposes\n * middleware that conform to the `fn(req, res, next)` signature.\n *\n * @return {Object}\n * @api protected\n */\nexports = module.exports = function() {\n  \n  return {\n    initialize: initialize,\n    authenticate: authenticate\n  };\n};\n","/**\n * Module dependencies.\n */\nvar IncomingMessageExt = require('../http/request');\n\n\n/**\n * Passport initialization.\n *\n * Intializes Passport for incoming requests, allowing authentication strategies\n * to be applied.\n *\n * If sessions are being utilized, applications must set up Passport with\n * functions to serialize a user into and out of a session.  For example, a\n * common pattern is to serialize just the user ID into the session (due to the\n * fact that it is desirable to store the minimum amount of data in a session).\n * When a subsequent request arrives for the session, the full User object can\n * be loaded from the database by ID.\n *\n * Note that additional middleware is required to persist login state, so we\n * must use the `connect.session()` middleware _before_ `passport.initialize()`.\n *\n * If sessions are being used, this middleware must be in use by the\n * Connect/Express application for Passport to operate.  If the application is\n * entirely stateless (not using sessions), this middleware is not necessary,\n * but its use will not have any adverse impact.\n *\n * Examples:\n *\n *     app.use(connect.cookieParser());\n *     app.use(connect.session({ secret: 'keyboard cat' }));\n *     app.use(passport.initialize());\n *     app.use(passport.session());\n *\n *     passport.serializeUser(function(user, done) {\n *       done(null, user.id);\n *     });\n *\n *     passport.deserializeUser(function(id, done) {\n *       User.findById(id, function (err, user) {\n *         done(err, user);\n *       });\n *     });\n *\n * @return {Function}\n * @api public\n */\nmodule.exports = function initialize(passport, options) {\n  options = options || {};\n  \n  return function initialize(req, res, next) {\n    req.login =\n    req.logIn = req.logIn || IncomingMessageExt.logIn;\n    req.logout =\n    req.logOut = req.logOut || IncomingMessageExt.logOut;\n    req.isAuthenticated = req.isAuthenticated || IncomingMessageExt.isAuthenticated;\n    req.isUnauthenticated = req.isUnauthenticated || IncomingMessageExt.isUnauthenticated;\n    \n    req._sessionManager = passport._sm;\n    \n    if (options.userProperty) {\n      req._userProperty = options.userProperty;\n    }\n    \n    var compat = (options.compat === undefined) ? true : options.compat;\n    if (compat) {\n      // `passport@0.5.1` [removed][1] all internal use of `req._passport`.\n      // From the standpoint of this package, this should have been a\n      // non-breaking change.  However, some strategies (such as `passport-azure-ad`)\n      // depend directly on `passport@0.4.x` or earlier.  `require`-ing earlier\n      // versions of `passport` has the effect of monkeypatching `http.IncomingMessage`\n      // with `logIn`, `logOut`, `isAuthenticated` and `isUnauthenticated`\n      // functions that [expect][2] the `req._passport` property to exist.\n      // Since pre-existing functions on `req` are given [preference][3], this\n      // results in [issues][4].\n      //\n      // The changes here restore the expected properties needed when earlier\n      // versions of `passport` are `require`-ed.  This compatibility mode is\n      // enabled by default, and can be disabld by simply not `use`-ing `passport.initialize()`\n      // middleware or setting `compat: false` as an option to the middleware.\n      //\n      // An alternative approach to addressing this issue would be to not\n      // preferentially use pre-existing functions on `req`, but rather always\n      // overwrite `req.logIn`, etc. with the versions of those functions shiped\n      // with `authenticate()` middleware.  This option should be reconsidered\n      // in a future major version release.\n      //\n      // [1]: https://github.com/jaredhanson/passport/pull/875\n      // [2]: https://github.com/jaredhanson/passport/blob/v0.4.1/lib/http/request.js\n      // [3]: https://github.com/jaredhanson/passport/blob/v0.5.1/lib/middleware/authenticate.js#L96\n      // [4]: https://github.com/jaredhanson/passport/issues/877\n      passport._userProperty = options.userProperty || 'user';\n      \n      req._passport = {};\n      req._passport.instance = passport;\n    }\n    \n    next();\n  };\n};\n","var req = exports = module.exports = {};\n\n/**\n * Initiate a login session for `user`.\n *\n * Options:\n *   - `session`  Save login state in session, defaults to _true_\n *\n * Examples:\n *\n *     req.logIn(user, { session: false });\n *\n *     req.logIn(user, function(err) {\n *       if (err) { throw err; }\n *       // session saved\n *     });\n *\n * @param {User} user\n * @param {Object} options\n * @param {Function} done\n * @api public\n */\nreq.login =\nreq.logIn = function(user, options, done) {\n  if (typeof options == 'function') {\n    done = options;\n    options = {};\n  }\n  options = options || {};\n  \n  var property = this._userProperty || 'user';\n  var session = (options.session === undefined) ? true : options.session;\n  \n  this[property] = user;\n  if (session && this._sessionManager) {\n    if (typeof done != 'function') { throw new Error('req#login requires a callback function'); }\n    \n    var self = this;\n    this._sessionManager.logIn(this, user, options, function(err) {\n      if (err) { self[property] = null; return done(err); }\n      done();\n    });\n  } else {\n    done && done();\n  }\n};\n\n/**\n * Terminate an existing login session.\n *\n * @api public\n */\nreq.logout =\nreq.logOut = function(options, done) {\n  if (typeof options == 'function') {\n    done = options;\n    options = {};\n  }\n  options = options || {};\n  \n  var property = this._userProperty || 'user';\n  \n  this[property] = null;\n  if (this._sessionManager) {\n    if (typeof done != 'function') { throw new Error('req#logout requires a callback function'); }\n    \n    this._sessionManager.logOut(this, options, done);\n  } else {\n    done && done();\n  }\n};\n\n/**\n * Test if request is authenticated.\n *\n * @return {Boolean}\n * @api public\n */\nreq.isAuthenticated = function() {\n  var property = this._userProperty || 'user';\n  return (this[property]) ? true : false;\n};\n\n/**\n * Test if request is unauthenticated.\n *\n * @return {Boolean}\n * @api public\n */\nreq.isUnauthenticated = function() {\n  return !this.isAuthenticated();\n};\n","/**\n * Module dependencies.\n */\nvar http = require('http')\n  , IncomingMessageExt = require('../http/request')\n  , AuthenticationError = require('../errors/authenticationerror');\n\n\n/**\n * Authenticates requests.\n *\n * Applies the `name`ed strategy (or strategies) to the incoming request, in\n * order to authenticate the request.  If authentication is successful, the user\n * will be logged in and populated at `req.user` and a session will be\n * established by default.  If authentication fails, an unauthorized response\n * will be sent.\n *\n * Options:\n *   - `session`          Save login state in session, defaults to _true_\n *   - `successRedirect`  After successful login, redirect to given URL\n *   - `successMessage`   True to store success message in\n *                        req.session.messages, or a string to use as override\n *                        message for success.\n *   - `successFlash`     True to flash success messages or a string to use as a flash\n *                        message for success (overrides any from the strategy itself).\n *   - `failureRedirect`  After failed login, redirect to given URL\n *   - `failureMessage`   True to store failure message in\n *                        req.session.messages, or a string to use as override\n *                        message for failure.\n *   - `failureFlash`     True to flash failure messages or a string to use as a flash\n *                        message for failures (overrides any from the strategy itself).\n *   - `assignProperty`   Assign the object provided by the verify callback to given property\n *\n * An optional `callback` can be supplied to allow the application to override\n * the default manner in which authentication attempts are handled.  The\n * callback has the following signature, where `user` will be set to the\n * authenticated user on a successful authentication attempt, or `false`\n * otherwise.  An optional `info` argument will be passed, containing additional\n * details provided by the strategy's verify callback - this could be information about\n * a successful authentication or a challenge message for a failed authentication.\n * An optional `status` argument will be passed when authentication fails - this could\n * be a HTTP response code for a remote authentication failure or similar.\n *\n *     app.get('/protected', function(req, res, next) {\n *       passport.authenticate('local', function(err, user, info, status) {\n *         if (err) { return next(err) }\n *         if (!user) { return res.redirect('/signin') }\n *         res.redirect('/account');\n *       })(req, res, next);\n *     });\n *\n * Note that if a callback is supplied, it becomes the application's\n * responsibility to log-in the user, establish a session, and otherwise perform\n * the desired operations.\n *\n * Examples:\n *\n *     passport.authenticate('local', { successRedirect: '/', failureRedirect: '/login' });\n *\n *     passport.authenticate('basic', { session: false });\n *\n *     passport.authenticate('twitter');\n *\n * @param {Strategy|String|Array} name\n * @param {Object} options\n * @param {Function} callback\n * @return {Function}\n * @api public\n */\nmodule.exports = function authenticate(passport, name, options, callback) {\n  if (typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  \n  var multi = true;\n  \n  // Cast `name` to an array, allowing authentication to pass through a chain of\n  // strategies.  The first strategy to succeed, redirect, or error will halt\n  // the chain.  Authentication failures will proceed through each strategy in\n  // series, ultimately failing if all strategies fail.\n  //\n  // This is typically used on API endpoints to allow clients to authenticate\n  // using their preferred choice of Basic, Digest, token-based schemes, etc.\n  // It is not feasible to construct a chain of multiple strategies that involve\n  // redirection (for example both Facebook and Twitter), since the first one to\n  // redirect will halt the chain.\n  if (!Array.isArray(name)) {\n    name = [ name ];\n    multi = false;\n  }\n  \n  return function authenticate(req, res, next) {\n    req.login =\n    req.logIn = req.logIn || IncomingMessageExt.logIn;\n    req.logout =\n    req.logOut = req.logOut || IncomingMessageExt.logOut;\n    req.isAuthenticated = req.isAuthenticated || IncomingMessageExt.isAuthenticated;\n    req.isUnauthenticated = req.isUnauthenticated || IncomingMessageExt.isUnauthenticated;\n    \n    req._sessionManager = passport._sm;\n    \n    // accumulator for failures from each strategy in the chain\n    var failures = [];\n    \n    function allFailed() {\n      if (callback) {\n        if (!multi) {\n          return callback(null, false, failures[0].challenge, failures[0].status);\n        } else {\n          var challenges = failures.map(function(f) { return f.challenge; });\n          var statuses = failures.map(function(f) { return f.status; });\n          return callback(null, false, challenges, statuses);\n        }\n      }\n      \n      // Strategies are ordered by priority.  For the purpose of flashing a\n      // message, the first failure will be displayed.\n      var failure = failures[0] || {}\n        , challenge = failure.challenge || {}\n        , msg;\n    \n      if (options.failureFlash) {\n        var flash = options.failureFlash;\n        if (typeof flash == 'string') {\n          flash = { type: 'error', message: flash };\n        }\n        flash.type = flash.type || 'error';\n      \n        var type = flash.type || challenge.type || 'error';\n        msg = flash.message || challenge.message || challenge;\n        if (typeof msg == 'string') {\n          req.flash(type, msg);\n        }\n      }\n      if (options.failureMessage) {\n        msg = options.failureMessage;\n        if (typeof msg == 'boolean') {\n          msg = challenge.message || challenge;\n        }\n        if (typeof msg == 'string') {\n          req.session.messages = req.session.messages || [];\n          req.session.messages.push(msg);\n        }\n      }\n      if (options.failureRedirect) {\n        return res.redirect(options.failureRedirect);\n      }\n    \n      // When failure handling is not delegated to the application, the default\n      // is to respond with 401 Unauthorized.  Note that the WWW-Authenticate\n      // header will be set according to the strategies in use (see\n      // actions#fail).  If multiple strategies failed, each of their challenges\n      // will be included in the response.\n      var rchallenge = []\n        , rstatus, status;\n      \n      for (var j = 0, len = failures.length; j < len; j++) {\n        failure = failures[j];\n        challenge = failure.challenge;\n        status = failure.status;\n          \n        rstatus = rstatus || status;\n        if (typeof challenge == 'string') {\n          rchallenge.push(challenge);\n        }\n      }\n    \n      res.statusCode = rstatus || 401;\n      if (res.statusCode == 401 && rchallenge.length) {\n        res.setHeader('WWW-Authenticate', rchallenge);\n      }\n      if (options.failWithError) {\n        return next(new AuthenticationError(http.STATUS_CODES[res.statusCode], rstatus));\n      }\n      res.end(http.STATUS_CODES[res.statusCode]);\n    }\n    \n    (function attempt(i) {\n      var layer = name[i];\n      // If no more strategies exist in the chain, authentication has failed.\n      if (!layer) { return allFailed(); }\n    \n      // Get the strategy, which will be used as prototype from which to create\n      // a new instance.  Action functions will then be bound to the strategy\n      // within the context of the HTTP request/response pair.\n      var strategy, prototype;\n      if (typeof layer.authenticate == 'function') {\n        strategy = layer;\n      } else {\n        prototype = passport._strategy(layer);\n        if (!prototype) { return next(new Error('Unknown authentication strategy \"' + layer + '\"')); }\n        \n        strategy = Object.create(prototype);\n      }\n      \n      \n      // ----- BEGIN STRATEGY AUGMENTATION -----\n      // Augment the new strategy instance with action functions.  These action\n      // functions are bound via closure the the request/response pair.  The end\n      // goal of the strategy is to invoke *one* of these action methods, in\n      // order to indicate successful or failed authentication, redirect to a\n      // third-party identity provider, etc.\n      \n      /**\n       * Authenticate `user`, with optional `info`.\n       *\n       * Strategies should call this function to successfully authenticate a\n       * user.  `user` should be an object supplied by the application after it\n       * has been given an opportunity to verify credentials.  `info` is an\n       * optional argument containing additional user information.  This is\n       * useful for third-party authentication strategies to pass profile\n       * details.\n       *\n       * @param {Object} user\n       * @param {Object} info\n       * @api public\n       */\n      strategy.success = function(user, info) {\n        if (callback) {\n          return callback(null, user, info);\n        }\n      \n        info = info || {};\n        var msg;\n      \n        if (options.successFlash) {\n          var flash = options.successFlash;\n          if (typeof flash == 'string') {\n            flash = { type: 'success', message: flash };\n          }\n          flash.type = flash.type || 'success';\n        \n          var type = flash.type || info.type || 'success';\n          msg = flash.message || info.message || info;\n          if (typeof msg == 'string') {\n            req.flash(type, msg);\n          }\n        }\n        if (options.successMessage) {\n          msg = options.successMessage;\n          if (typeof msg == 'boolean') {\n            msg = info.message || info;\n          }\n          if (typeof msg == 'string') {\n            req.session.messages = req.session.messages || [];\n            req.session.messages.push(msg);\n          }\n        }\n        if (options.assignProperty) {\n          req[options.assignProperty] = user;\n          if (options.authInfo !== false) {\n            passport.transformAuthInfo(info, req, function(err, tinfo) {\n              if (err) { return next(err); }\n              req.authInfo = tinfo;\n              next();\n            });\n          } else {\n            next();\n          }\n          return;\n        }\n      \n        req.logIn(user, options, function(err) {\n          if (err) { return next(err); }\n          \n          function complete() {\n            if (options.successReturnToOrRedirect) {\n              var url = options.successReturnToOrRedirect;\n              if (req.session && req.session.returnTo) {\n                url = req.session.returnTo;\n                delete req.session.returnTo;\n              }\n              return res.redirect(url);\n            }\n            if (options.successRedirect) {\n              return res.redirect(options.successRedirect);\n            }\n            next();\n          }\n          \n          if (options.authInfo !== false) {\n            passport.transformAuthInfo(info, req, function(err, tinfo) {\n              if (err) { return next(err); }\n              req.authInfo = tinfo;\n              complete();\n            });\n          } else {\n            complete();\n          }\n        });\n      };\n      \n      /**\n       * Fail authentication, with optional `challenge` and `status`, defaulting\n       * to 401.\n       *\n       * Strategies should call this function to fail an authentication attempt.\n       *\n       * @param {String} challenge\n       * @param {Number} status\n       * @api public\n       */\n      strategy.fail = function(challenge, status) {\n        if (typeof challenge == 'number') {\n          status = challenge;\n          challenge = undefined;\n        }\n        \n        // push this failure into the accumulator and attempt authentication\n        // using the next strategy\n        failures.push({ challenge: challenge, status: status });\n        attempt(i + 1);\n      };\n      \n      /**\n       * Redirect to `url` with optional `status`, defaulting to 302.\n       *\n       * Strategies should call this function to redirect the user (via their\n       * user agent) to a third-party website for authentication.\n       *\n       * @param {String} url\n       * @param {Number} status\n       * @api public\n       */\n      strategy.redirect = function(url, status) {\n        // NOTE: Do not use `res.redirect` from Express, because it can't decide\n        //       what it wants.\n        //\n        //       Express 2.x: res.redirect(url, status)\n        //       Express 3.x: res.redirect(status, url) -OR- res.redirect(url, status)\n        //         - as of 3.14.0, deprecated warnings are issued if res.redirect(url, status)\n        //           is used\n        //       Express 4.x: res.redirect(status, url)\n        //         - all versions (as of 4.8.7) continue to accept res.redirect(url, status)\n        //           but issue deprecated versions\n        \n        res.statusCode = status || 302;\n        res.setHeader('Location', url);\n        res.setHeader('Content-Length', '0');\n        res.end();\n      };\n      \n      /**\n       * Pass without making a success or fail decision.\n       *\n       * Under most circumstances, Strategies should not need to call this\n       * function.  It exists primarily to allow previous authentication state\n       * to be restored, for example from an HTTP session.\n       *\n       * @api public\n       */\n      strategy.pass = function() {\n        next();\n      };\n      \n      /**\n       * Internal error while performing authentication.\n       *\n       * Strategies should call this function when an internal error occurs\n       * during the process of performing authentication; for example, if the\n       * user directory is not available.\n       *\n       * @param {Error} err\n       * @api public\n       */\n      strategy.error = function(err) {\n        if (callback) {\n          return callback(err);\n        }\n        \n        next(err);\n      };\n      \n      // ----- END STRATEGY AUGMENTATION -----\n    \n      strategy.authenticate(req, options);\n    })(0); // attempt\n  };\n};\n","module.exports = require(\"http\");","/**\n * `AuthenticationError` error.\n *\n * @constructor\n * @api private\n */\nfunction AuthenticationError(message, status) {\n  Error.call(this);\n  Error.captureStackTrace(this, arguments.callee);\n  this.name = 'AuthenticationError';\n  this.message = message;\n  this.status = status || 401;\n}\n\n// Inherit from `Error`.\nAuthenticationError.prototype.__proto__ = Error.prototype;\n\n\n// Expose constructor.\nmodule.exports = AuthenticationError;\n","/*!\n * express-session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar cookie = require('cookie');\nvar crypto = require('crypto')\nvar debug = require('debug')('express-session');\nvar deprecate = require('depd')('express-session');\nvar onHeaders = require('on-headers')\nvar parseUrl = require('parseurl');\nvar signature = require('cookie-signature')\nvar uid = require('uid-safe').sync\n\nvar Cookie = require('./session/cookie')\nvar MemoryStore = require('./session/memory')\nvar Session = require('./session/session')\nvar Store = require('./session/store')\n\n// environment\n\nvar env = process.env.NODE_ENV;\n\n/**\n * Expose the middleware.\n */\n\nexports = module.exports = session;\n\n/**\n * Expose constructors.\n */\n\nexports.Store = Store;\nexports.Cookie = Cookie;\nexports.Session = Session;\nexports.MemoryStore = MemoryStore;\n\n/**\n * Warning message for `MemoryStore` usage in production.\n * @private\n */\n\nvar warning = 'Warning: connect.session() MemoryStore is not\\n'\n  + 'designed for a production environment, as it will leak\\n'\n  + 'memory, and will not scale past a single process.';\n\n/**\n * Node.js 0.8+ async implementation.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Setup session store with the given `options`.\n *\n * @param {Object} [options]\n * @param {Object} [options.cookie] Options for cookie\n * @param {Function} [options.genid]\n * @param {String} [options.name=connect.sid] Session ID cookie name\n * @param {Boolean} [options.proxy]\n * @param {Boolean} [options.resave] Resave unmodified sessions back to the store\n * @param {Boolean} [options.rolling] Enable/disable rolling session expiration\n * @param {Boolean} [options.saveUninitialized] Save uninitialized sessions to the store\n * @param {String|Array} [options.secret] Secret for signing session ID\n * @param {Object} [options.store=MemoryStore] Session store\n * @param {String} [options.unset]\n * @return {Function} middleware\n * @public\n */\n\nfunction session(options) {\n  var opts = options || {}\n\n  // get the cookie options\n  var cookieOptions = opts.cookie || {}\n\n  // get the session id generate function\n  var generateId = opts.genid || generateSessionId\n\n  // get the session cookie name\n  var name = opts.name || opts.key || 'connect.sid'\n\n  // get the session store\n  var store = opts.store || new MemoryStore()\n\n  // get the trust proxy setting\n  var trustProxy = opts.proxy\n\n  // get the resave session option\n  var resaveSession = opts.resave;\n\n  // get the rolling session option\n  var rollingSessions = Boolean(opts.rolling)\n\n  // get the save uninitialized session option\n  var saveUninitializedSession = opts.saveUninitialized\n\n  // get the cookie signing secret\n  var secret = opts.secret\n\n  if (typeof generateId !== 'function') {\n    throw new TypeError('genid option must be a function');\n  }\n\n  if (resaveSession === undefined) {\n    deprecate('undefined resave option; provide resave option');\n    resaveSession = true;\n  }\n\n  if (saveUninitializedSession === undefined) {\n    deprecate('undefined saveUninitialized option; provide saveUninitialized option');\n    saveUninitializedSession = true;\n  }\n\n  if (opts.unset && opts.unset !== 'destroy' && opts.unset !== 'keep') {\n    throw new TypeError('unset option must be \"destroy\" or \"keep\"');\n  }\n\n  // TODO: switch to \"destroy\" on next major\n  var unsetDestroy = opts.unset === 'destroy'\n\n  if (Array.isArray(secret) && secret.length === 0) {\n    throw new TypeError('secret option array must contain one or more strings');\n  }\n\n  if (secret && !Array.isArray(secret)) {\n    secret = [secret];\n  }\n\n  if (!secret) {\n    deprecate('req.secret; provide secret option');\n  }\n\n  // notify user that this store is not\n  // meant for a production environment\n  /* istanbul ignore next: not tested */\n  if (env === 'production' && store instanceof MemoryStore) {\n    console.warn(warning);\n  }\n\n  // generates the new session\n  store.generate = function(req){\n    req.sessionID = generateId(req);\n    req.session = new Session(req);\n    req.session.cookie = new Cookie(cookieOptions);\n\n    if (cookieOptions.secure === 'auto') {\n      req.session.cookie.secure = issecure(req, trustProxy);\n    }\n  };\n\n  var storeImplementsTouch = typeof store.touch === 'function';\n\n  // register event listeners for the store to track readiness\n  var storeReady = true\n  store.on('disconnect', function ondisconnect() {\n    storeReady = false\n  })\n  store.on('connect', function onconnect() {\n    storeReady = true\n  })\n\n  return function session(req, res, next) {\n    // self-awareness\n    if (req.session) {\n      next()\n      return\n    }\n\n    // Handle connection as if there is no session if\n    // the store has temporarily disconnected etc\n    if (!storeReady) {\n      debug('store is disconnected')\n      next()\n      return\n    }\n\n    // pathname mismatch\n    var originalPath = parseUrl.original(req).pathname || '/'\n    if (originalPath.indexOf(cookieOptions.path || '/') !== 0) {\n      debug('pathname mismatch')\n      next()\n      return\n    }\n\n    // ensure a secret is available or bail\n    if (!secret && !req.secret) {\n      next(new Error('secret option required for sessions'));\n      return;\n    }\n\n    // backwards compatibility for signed cookies\n    // req.secret is passed from the cookie parser middleware\n    var secrets = secret || [req.secret];\n\n    var originalHash;\n    var originalId;\n    var savedHash;\n    var touched = false\n\n    // expose store\n    req.sessionStore = store;\n\n    // get the session ID from the cookie\n    var cookieId = req.sessionID = getcookie(req, name, secrets);\n\n    // set-cookie\n    onHeaders(res, function(){\n      if (!req.session) {\n        debug('no session');\n        return;\n      }\n\n      if (!shouldSetCookie(req)) {\n        return;\n      }\n\n      // only send secure cookies via https\n      if (req.session.cookie.secure && !issecure(req, trustProxy)) {\n        debug('not secured');\n        return;\n      }\n\n      if (!touched) {\n        // touch session\n        req.session.touch()\n        touched = true\n      }\n\n      // set cookie\n      try {\n        setcookie(res, name, req.sessionID, secrets[0], req.session.cookie.data)\n      } catch (err) {\n        defer(next, err)\n      }\n    });\n\n    // proxy end() to commit the session\n    var _end = res.end;\n    var _write = res.write;\n    var ended = false;\n    res.end = function end(chunk, encoding) {\n      if (ended) {\n        return false;\n      }\n\n      ended = true;\n\n      var ret;\n      var sync = true;\n\n      function writeend() {\n        if (sync) {\n          ret = _end.call(res, chunk, encoding);\n          sync = false;\n          return;\n        }\n\n        _end.call(res);\n      }\n\n      function writetop() {\n        if (!sync) {\n          return ret;\n        }\n\n        if (!res._header) {\n          res._implicitHeader()\n        }\n\n        if (chunk == null) {\n          ret = true;\n          return ret;\n        }\n\n        var contentLength = Number(res.getHeader('Content-Length'));\n\n        if (!isNaN(contentLength) && contentLength > 0) {\n          // measure chunk\n          chunk = !Buffer.isBuffer(chunk)\n            ? Buffer.from(chunk, encoding)\n            : chunk;\n          encoding = undefined;\n\n          if (chunk.length !== 0) {\n            debug('split response');\n            ret = _write.call(res, chunk.slice(0, chunk.length - 1));\n            chunk = chunk.slice(chunk.length - 1, chunk.length);\n            return ret;\n          }\n        }\n\n        ret = _write.call(res, chunk, encoding);\n        sync = false;\n\n        return ret;\n      }\n\n      if (shouldDestroy(req)) {\n        // destroy session\n        debug('destroying');\n        store.destroy(req.sessionID, function ondestroy(err) {\n          if (err) {\n            defer(next, err);\n          }\n\n          debug('destroyed');\n          writeend();\n        });\n\n        return writetop();\n      }\n\n      // no session to save\n      if (!req.session) {\n        debug('no session');\n        return _end.call(res, chunk, encoding);\n      }\n\n      if (!touched) {\n        // touch session\n        req.session.touch()\n        touched = true\n      }\n\n      if (shouldSave(req)) {\n        req.session.save(function onsave(err) {\n          if (err) {\n            defer(next, err);\n          }\n\n          writeend();\n        });\n\n        return writetop();\n      } else if (storeImplementsTouch && shouldTouch(req)) {\n        // store implements touch method\n        debug('touching');\n        store.touch(req.sessionID, req.session, function ontouch(err) {\n          if (err) {\n            defer(next, err);\n          }\n\n          debug('touched');\n          writeend();\n        });\n\n        return writetop();\n      }\n\n      return _end.call(res, chunk, encoding);\n    };\n\n    // generate the session\n    function generate() {\n      store.generate(req);\n      originalId = req.sessionID;\n      originalHash = hash(req.session);\n      wrapmethods(req.session);\n    }\n\n    // inflate the session\n    function inflate (req, sess) {\n      store.createSession(req, sess)\n      originalId = req.sessionID\n      originalHash = hash(sess)\n\n      if (!resaveSession) {\n        savedHash = originalHash\n      }\n\n      wrapmethods(req.session)\n    }\n\n    function rewrapmethods (sess, callback) {\n      return function () {\n        if (req.session !== sess) {\n          wrapmethods(req.session)\n        }\n\n        callback.apply(this, arguments)\n      }\n    }\n\n    // wrap session methods\n    function wrapmethods(sess) {\n      var _reload = sess.reload\n      var _save = sess.save;\n\n      function reload(callback) {\n        debug('reloading %s', this.id)\n        _reload.call(this, rewrapmethods(this, callback))\n      }\n\n      function save() {\n        debug('saving %s', this.id);\n        savedHash = hash(this);\n        _save.apply(this, arguments);\n      }\n\n      Object.defineProperty(sess, 'reload', {\n        configurable: true,\n        enumerable: false,\n        value: reload,\n        writable: true\n      })\n\n      Object.defineProperty(sess, 'save', {\n        configurable: true,\n        enumerable: false,\n        value: save,\n        writable: true\n      });\n    }\n\n    // check if session has been modified\n    function isModified(sess) {\n      return originalId !== sess.id || originalHash !== hash(sess);\n    }\n\n    // check if session has been saved\n    function isSaved(sess) {\n      return originalId === sess.id && savedHash === hash(sess);\n    }\n\n    // determine if session should be destroyed\n    function shouldDestroy(req) {\n      return req.sessionID && unsetDestroy && req.session == null;\n    }\n\n    // determine if session should be saved to store\n    function shouldSave(req) {\n      // cannot set cookie without a session ID\n      if (typeof req.sessionID !== 'string') {\n        debug('session ignored because of bogus req.sessionID %o', req.sessionID);\n        return false;\n      }\n\n      return !saveUninitializedSession && !savedHash && cookieId !== req.sessionID\n        ? isModified(req.session)\n        : !isSaved(req.session)\n    }\n\n    // determine if session should be touched\n    function shouldTouch(req) {\n      // cannot set cookie without a session ID\n      if (typeof req.sessionID !== 'string') {\n        debug('session ignored because of bogus req.sessionID %o', req.sessionID);\n        return false;\n      }\n\n      return cookieId === req.sessionID && !shouldSave(req);\n    }\n\n    // determine if cookie should be set on response\n    function shouldSetCookie(req) {\n      // cannot set cookie without a session ID\n      if (typeof req.sessionID !== 'string') {\n        return false;\n      }\n\n      return cookieId !== req.sessionID\n        ? saveUninitializedSession || isModified(req.session)\n        : rollingSessions || req.session.cookie.expires != null && isModified(req.session);\n    }\n\n    // generate a session if the browser doesn't send a sessionID\n    if (!req.sessionID) {\n      debug('no SID sent, generating session');\n      generate();\n      next();\n      return;\n    }\n\n    // generate the session object\n    debug('fetching %s', req.sessionID);\n    store.get(req.sessionID, function(err, sess){\n      // error handling\n      if (err && err.code !== 'ENOENT') {\n        debug('error %j', err);\n        next(err)\n        return\n      }\n\n      try {\n        if (err || !sess) {\n          debug('no session found')\n          generate()\n        } else {\n          debug('session found')\n          inflate(req, sess)\n        }\n      } catch (e) {\n        next(e)\n        return\n      }\n\n      next()\n    });\n  };\n};\n\n/**\n * Generate a session ID for a new session.\n *\n * @return {String}\n * @private\n */\n\nfunction generateSessionId(sess) {\n  return uid(24);\n}\n\n/**\n * Get the session ID cookie from request.\n *\n * @return {string}\n * @private\n */\n\nfunction getcookie(req, name, secrets) {\n  var header = req.headers.cookie;\n  var raw;\n  var val;\n\n  // read from cookie header\n  if (header) {\n    var cookies = cookie.parse(header);\n\n    raw = cookies[name];\n\n    if (raw) {\n      if (raw.substr(0, 2) === 's:') {\n        val = unsigncookie(raw.slice(2), secrets);\n\n        if (val === false) {\n          debug('cookie signature invalid');\n          val = undefined;\n        }\n      } else {\n        debug('cookie unsigned')\n      }\n    }\n  }\n\n  // back-compat read from cookieParser() signedCookies data\n  if (!val && req.signedCookies) {\n    val = req.signedCookies[name];\n\n    if (val) {\n      deprecate('cookie should be available in req.headers.cookie');\n    }\n  }\n\n  // back-compat read from cookieParser() cookies data\n  if (!val && req.cookies) {\n    raw = req.cookies[name];\n\n    if (raw) {\n      if (raw.substr(0, 2) === 's:') {\n        val = unsigncookie(raw.slice(2), secrets);\n\n        if (val) {\n          deprecate('cookie should be available in req.headers.cookie');\n        }\n\n        if (val === false) {\n          debug('cookie signature invalid');\n          val = undefined;\n        }\n      } else {\n        debug('cookie unsigned')\n      }\n    }\n  }\n\n  return val;\n}\n\n/**\n * Hash the given `sess` object omitting changes to `.cookie`.\n *\n * @param {Object} sess\n * @return {String}\n * @private\n */\n\nfunction hash(sess) {\n  // serialize\n  var str = JSON.stringify(sess, function (key, val) {\n    // ignore sess.cookie property\n    if (this === sess && key === 'cookie') {\n      return\n    }\n\n    return val\n  })\n\n  // hash\n  return crypto\n    .createHash('sha1')\n    .update(str, 'utf8')\n    .digest('hex')\n}\n\n/**\n * Determine if request is secure.\n *\n * @param {Object} req\n * @param {Boolean} [trustProxy]\n * @return {Boolean}\n * @private\n */\n\nfunction issecure(req, trustProxy) {\n  // socket is https server\n  if (req.connection && req.connection.encrypted) {\n    return true;\n  }\n\n  // do not trust proxy\n  if (trustProxy === false) {\n    return false;\n  }\n\n  // no explicit trust; try req.secure from express\n  if (trustProxy !== true) {\n    return req.secure === true\n  }\n\n  // read the proto from x-forwarded-proto header\n  var header = req.headers['x-forwarded-proto'] || '';\n  var index = header.indexOf(',');\n  var proto = index !== -1\n    ? header.substr(0, index).toLowerCase().trim()\n    : header.toLowerCase().trim()\n\n  return proto === 'https';\n}\n\n/**\n * Set cookie on response.\n *\n * @private\n */\n\nfunction setcookie(res, name, val, secret, options) {\n  var signed = 's:' + signature.sign(val, secret);\n  var data = cookie.serialize(name, signed, options);\n\n  debug('set-cookie %s', data);\n\n  var prev = res.getHeader('Set-Cookie') || []\n  var header = Array.isArray(prev) ? prev.concat(data) : [prev, data];\n\n  res.setHeader('Set-Cookie', header)\n}\n\n/**\n * Verify and decode the given `val` with `secrets`.\n *\n * @param {String} val\n * @param {Array} secrets\n * @returns {String|Boolean}\n * @private\n */\nfunction unsigncookie(val, secrets) {\n  for (var i = 0; i < secrets.length; i++) {\n    var result = signature.unsign(val, secrets[i]);\n\n    if (result !== false) {\n      return result;\n    }\n  }\n\n  return false;\n}\n","module.exports = require(\"safe-buffer\");","module.exports = require(\"cookie\");","module.exports = require(\"crypto\");","module.exports = require(\"debug\");","module.exports = require(\"depd\");","module.exports = require(\"on-headers\");","module.exports = require(\"parseurl\");","module.exports = require(\"cookie-signature\");","/*!\n * uid-safe\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar randomBytes = require('random-bytes')\n\n/**\n * Module variables.\n * @private\n */\n\nvar EQUAL_END_REGEXP = /=+$/\nvar PLUS_GLOBAL_REGEXP = /\\+/g\nvar SLASH_GLOBAL_REGEXP = /\\//g\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = uid\nmodule.exports.sync = uidSync\n\n/**\n * Create a unique ID.\n *\n * @param {number} length\n * @param {function} [callback]\n * @return {Promise}\n * @public\n */\n\nfunction uid (length, callback) {\n  // validate callback is a function, if provided\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!callback && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  if (callback) {\n    // classic callback style\n    return generateUid(length, callback)\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    generateUid(length, function onUid (err, str) {\n      if (err) return reject(err)\n      resolve(str)\n    })\n  })\n}\n\n/**\n * Create a unique ID sync.\n *\n * @param {number} length\n * @return {string}\n * @public\n */\n\nfunction uidSync (length) {\n  return toString(randomBytes.sync(length))\n}\n\n/**\n * Generate a unique ID string.\n *\n * @param {number} length\n * @param {function} callback\n * @private\n */\n\nfunction generateUid (length, callback) {\n  randomBytes(length, function (err, buf) {\n    if (err) return callback(err)\n    callback(null, toString(buf))\n  })\n}\n\n/**\n * Change a Buffer into a string.\n *\n * @param {Buffer} buf\n * @return {string}\n * @private\n */\n\nfunction toString (buf) {\n  return buf.toString('base64')\n    .replace(EQUAL_END_REGEXP, '')\n    .replace(PLUS_GLOBAL_REGEXP, '-')\n    .replace(SLASH_GLOBAL_REGEXP, '_')\n}\n","/*!\n * random-bytes\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\n\n/**\n * Module variables.\n * @private\n */\n\nvar generateAttempts = crypto.randomBytes === crypto.pseudoRandomBytes ? 1 : 3\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = randomBytes\nmodule.exports.sync = randomBytesSync\n\n/**\n * Generates strong pseudo-random bytes.\n *\n * @param {number} size\n * @param {function} [callback]\n * @return {Promise}\n * @public\n */\n\nfunction randomBytes(size, callback) {\n  // validate callback is a function, if provided\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!callback && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  if (callback) {\n    // classic callback style\n    return generateRandomBytes(size, generateAttempts, callback)\n  }\n\n  return new Promise(function executor(resolve, reject) {\n    generateRandomBytes(size, generateAttempts, function onRandomBytes(err, str) {\n      if (err) return reject(err)\n      resolve(str)\n    })\n  })\n}\n\n/**\n * Generates strong pseudo-random bytes sync.\n *\n * @param {number} size\n * @return {Buffer}\n * @public\n */\n\nfunction randomBytesSync(size) {\n  var err = null\n\n  for (var i = 0; i < generateAttempts; i++) {\n    try {\n      return crypto.randomBytes(size)\n    } catch (e) {\n      err = e\n    }\n  }\n\n  throw err\n}\n\n/**\n * Generates strong pseudo-random bytes.\n *\n * @param {number} size\n * @param {number} attempts\n * @param {function} callback\n * @private\n */\n\nfunction generateRandomBytes(size, attempts, callback) {\n  crypto.randomBytes(size, function onRandomBytes(err, buf) {\n    if (!err) return callback(null, buf)\n    if (!--attempts) return callback(err)\n    setTimeout(generateRandomBytes.bind(null, size, attempts, callback), 10)\n  })\n}\n","/*!\n * Connect - session - Cookie\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar cookie = require('cookie')\nvar deprecate = require('depd')('express-session')\n\n/**\n * Initialize a new `Cookie` with the given `options`.\n *\n * @param {IncomingMessage} req\n * @param {Object} options\n * @api private\n */\n\nvar Cookie = module.exports = function Cookie(options) {\n  this.path = '/';\n  this.maxAge = null;\n  this.httpOnly = true;\n\n  if (options) {\n    if (typeof options !== 'object') {\n      throw new TypeError('argument options must be a object')\n    }\n\n    for (var key in options) {\n      if (key !== 'data') {\n        this[key] = options[key]\n      }\n    }\n  }\n\n  if (this.originalMaxAge === undefined || this.originalMaxAge === null) {\n    this.originalMaxAge = this.maxAge\n  }\n};\n\n/*!\n * Prototype.\n */\n\nCookie.prototype = {\n\n  /**\n   * Set expires `date`.\n   *\n   * @param {Date} date\n   * @api public\n   */\n\n  set expires(date) {\n    this._expires = date;\n    this.originalMaxAge = this.maxAge;\n  },\n\n  /**\n   * Get expires `date`.\n   *\n   * @return {Date}\n   * @api public\n   */\n\n  get expires() {\n    return this._expires;\n  },\n\n  /**\n   * Set expires via max-age in `ms`.\n   *\n   * @param {Number} ms\n   * @api public\n   */\n\n  set maxAge(ms) {\n    if (ms && typeof ms !== 'number' && !(ms instanceof Date)) {\n      throw new TypeError('maxAge must be a number or Date')\n    }\n\n    if (ms instanceof Date) {\n      deprecate('maxAge as Date; pass number of milliseconds instead')\n    }\n\n    this.expires = typeof ms === 'number'\n      ? new Date(Date.now() + ms)\n      : ms;\n  },\n\n  /**\n   * Get expires max-age in `ms`.\n   *\n   * @return {Number}\n   * @api public\n   */\n\n  get maxAge() {\n    return this.expires instanceof Date\n      ? this.expires.valueOf() - Date.now()\n      : this.expires;\n  },\n\n  /**\n   * Return cookie data object.\n   *\n   * @return {Object}\n   * @api private\n   */\n\n  get data() {\n    return {\n      originalMaxAge: this.originalMaxAge,\n      partitioned: this.partitioned,\n      priority: this.priority\n      , expires: this._expires\n      , secure: this.secure\n      , httpOnly: this.httpOnly\n      , domain: this.domain\n      , path: this.path\n      , sameSite: this.sameSite\n    }\n  },\n\n  /**\n   * Return a serialized cookie string.\n   *\n   * @return {String}\n   * @api public\n   */\n\n  serialize: function(name, val){\n    return cookie.serialize(name, val, this.data);\n  },\n\n  /**\n   * Return JSON representation of this cookie.\n   *\n   * @return {Object}\n   * @api private\n   */\n\n  toJSON: function(){\n    return this.data;\n  }\n};\n","/*!\n * express-session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Store = require('./store')\nvar util = require('util')\n\n/**\n * Shim setImmediate for node.js < 0.10\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Module exports.\n */\n\nmodule.exports = MemoryStore\n\n/**\n * A session store in memory.\n * @public\n */\n\nfunction MemoryStore() {\n  Store.call(this)\n  this.sessions = Object.create(null)\n}\n\n/**\n * Inherit from Store.\n */\n\nutil.inherits(MemoryStore, Store)\n\n/**\n * Get all active sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.all = function all(callback) {\n  var sessionIds = Object.keys(this.sessions)\n  var sessions = Object.create(null)\n\n  for (var i = 0; i < sessionIds.length; i++) {\n    var sessionId = sessionIds[i]\n    var session = getSession.call(this, sessionId)\n\n    if (session) {\n      sessions[sessionId] = session;\n    }\n  }\n\n  callback && defer(callback, null, sessions)\n}\n\n/**\n * Clear all sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.clear = function clear(callback) {\n  this.sessions = Object.create(null)\n  callback && defer(callback)\n}\n\n/**\n * Destroy the session associated with the given session ID.\n *\n * @param {string} sessionId\n * @public\n */\n\nMemoryStore.prototype.destroy = function destroy(sessionId, callback) {\n  delete this.sessions[sessionId]\n  callback && defer(callback)\n}\n\n/**\n * Fetch session by the given session ID.\n *\n * @param {string} sessionId\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.get = function get(sessionId, callback) {\n  defer(callback, null, getSession.call(this, sessionId))\n}\n\n/**\n * Commit the given session associated with the given sessionId to the store.\n *\n * @param {string} sessionId\n * @param {object} session\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.set = function set(sessionId, session, callback) {\n  this.sessions[sessionId] = JSON.stringify(session)\n  callback && defer(callback)\n}\n\n/**\n * Get number of active sessions.\n *\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.length = function length(callback) {\n  this.all(function (err, sessions) {\n    if (err) return callback(err)\n    callback(null, Object.keys(sessions).length)\n  })\n}\n\n/**\n * Touch the given session object associated with the given session ID.\n *\n * @param {string} sessionId\n * @param {object} session\n * @param {function} callback\n * @public\n */\n\nMemoryStore.prototype.touch = function touch(sessionId, session, callback) {\n  var currentSession = getSession.call(this, sessionId)\n\n  if (currentSession) {\n    // update expiration\n    currentSession.cookie = session.cookie\n    this.sessions[sessionId] = JSON.stringify(currentSession)\n  }\n\n  callback && defer(callback)\n}\n\n/**\n * Get session from the store.\n * @private\n */\n\nfunction getSession(sessionId) {\n  var sess = this.sessions[sessionId]\n\n  if (!sess) {\n    return\n  }\n\n  // parse\n  sess = JSON.parse(sess)\n\n  if (sess.cookie) {\n    var expires = typeof sess.cookie.expires === 'string'\n      ? new Date(sess.cookie.expires)\n      : sess.cookie.expires\n\n    // destroy expired session\n    if (expires && expires <= Date.now()) {\n      delete this.sessions[sessionId]\n      return\n    }\n  }\n\n  return sess\n}\n","/*!\n * Connect - session - Store\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Cookie = require('./cookie')\nvar EventEmitter = require('events').EventEmitter\nvar Session = require('./session')\nvar util = require('util')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Store\n\n/**\n * Abstract base class for session stores.\n * @public\n */\n\nfunction Store () {\n  EventEmitter.call(this)\n}\n\n/**\n * Inherit from EventEmitter.\n */\n\nutil.inherits(Store, EventEmitter)\n\n/**\n * Re-generate the given requests's session.\n *\n * @param {IncomingRequest} req\n * @return {Function} fn\n * @api public\n */\n\nStore.prototype.regenerate = function(req, fn){\n  var self = this;\n  this.destroy(req.sessionID, function(err){\n    self.generate(req);\n    fn(err);\n  });\n};\n\n/**\n * Load a `Session` instance via the given `sid`\n * and invoke the callback `fn(err, sess)`.\n *\n * @param {String} sid\n * @param {Function} fn\n * @api public\n */\n\nStore.prototype.load = function(sid, fn){\n  var self = this;\n  this.get(sid, function(err, sess){\n    if (err) return fn(err);\n    if (!sess) return fn();\n    var req = { sessionID: sid, sessionStore: self };\n    fn(null, self.createSession(req, sess))\n  });\n};\n\n/**\n * Create session from JSON `sess` data.\n *\n * @param {IncomingRequest} req\n * @param {Object} sess\n * @return {Session}\n * @api private\n */\n\nStore.prototype.createSession = function(req, sess){\n  var expires = sess.cookie.expires\n  var originalMaxAge = sess.cookie.originalMaxAge\n\n  sess.cookie = new Cookie(sess.cookie);\n\n  if (typeof expires === 'string') {\n    // convert expires to a Date object\n    sess.cookie.expires = new Date(expires)\n  }\n\n  // keep originalMaxAge intact\n  sess.cookie.originalMaxAge = originalMaxAge\n\n  req.session = new Session(req, sess);\n  return req.session;\n};\n","module.exports = require(\"events\");","/*!\n * Connect - session - Session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Expose Session.\n */\n\nmodule.exports = Session;\n\n/**\n * Create a new `Session` with the given request and `data`.\n *\n * @param {IncomingRequest} req\n * @param {Object} data\n * @api private\n */\n\nfunction Session(req, data) {\n  Object.defineProperty(this, 'req', { value: req });\n  Object.defineProperty(this, 'id', { value: req.sessionID });\n\n  if (typeof data === 'object' && data !== null) {\n    // merge data into this, ignoring prototype properties\n    for (var prop in data) {\n      if (!(prop in this)) {\n        this[prop] = data[prop]\n      }\n    }\n  }\n}\n\n/**\n * Update reset `.cookie.maxAge` to prevent\n * the cookie from expiring when the\n * session is still active.\n *\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'touch', function touch() {\n  return this.resetMaxAge();\n});\n\n/**\n * Reset `.maxAge` to `.originalMaxAge`.\n *\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'resetMaxAge', function resetMaxAge() {\n  this.cookie.maxAge = this.cookie.originalMaxAge;\n  return this;\n});\n\n/**\n * Save the session data with optional callback `fn(err)`.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'save', function save(fn) {\n  this.req.sessionStore.set(this.id, this, fn || function(){});\n  return this;\n});\n\n/**\n * Re-loads the session data _without_ altering\n * the maxAge properties. Invokes the callback `fn(err)`,\n * after which time if no exception has occurred the\n * `req.session` property will be a new `Session` object,\n * although representing the same session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'reload', function reload(fn) {\n  var req = this.req\n  var store = this.req.sessionStore\n\n  store.get(this.id, function(err, sess){\n    if (err) return fn(err);\n    if (!sess) return fn(new Error('failed to load session'));\n    store.createSession(req, sess);\n    fn();\n  });\n  return this;\n});\n\n/**\n * Destroy `this` session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'destroy', function destroy(fn) {\n  delete this.req.session;\n  this.req.sessionStore.destroy(this.id, fn);\n  return this;\n});\n\n/**\n * Regenerate this request's session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\ndefineMethod(Session.prototype, 'regenerate', function regenerate(fn) {\n  this.req.sessionStore.regenerate(this.req, fn);\n  return this;\n});\n\n/**\n * Helper function for creating a method on a prototype.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} fn\n * @private\n */\nfunction defineMethod(obj, name, fn) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: false,\n    value: fn,\n    writable: true\n  });\n};\n","import { PassportStatic } from 'passport';\nimport googleStrategyConfig from './googleStrategy';\n\nconst setupAuthStrategies = (passport: PassportStatic): void => {\n  googleStrategyConfig(passport);\n};\n\nexport default setupAuthStrategies;\n","import { PassportStatic } from 'passport';\nimport { Strategy as GoogleStrategy } from 'passport-google-oauth20';\n\nconst googleStrategyConfig = (passport: PassportStatic): void => {\n  passport.use(\n    new GoogleStrategy(\n      {\n        clientID: process.env.NX_GOOGLE_CLIENT_ID as string,\n        clientSecret: process.env.NX_GOOGLE_CLIENT_SECRET as string,\n        callbackURL: 'http://localhost:3333/auth/google/callback',\n      },\n      (accessToken, refreshToken, profile, cb) => {\n        // Here, you might want to save the profile information to your database or check if the user exists in your DB\n        return cb(null, profile);\n      }\n    )\n  );\n\n  passport.serializeUser((user: any, done) => {\n    done(null, user);\n  });\n\n  passport.deserializeUser((obj: any, done) => {\n    done(null, obj);\n  });\n};\n\nexport default googleStrategyConfig;\n","// Load modules.\nvar Strategy = require('./strategy');\n\n\n// Expose Strategy.\nexports = module.exports = Strategy;\n\n// Exports.\nexports.Strategy = Strategy;\n","// Load modules.\nvar OAuth2Strategy = require('passport-oauth2')\n  , util = require('util')\n  , uri = require('url')\n  , GooglePlusProfile = require('./profile/googleplus')\n  , OpenIDProfile = require('./profile/openid')\n  , InternalOAuthError = require('passport-oauth2').InternalOAuthError\n  , GooglePlusAPIError = require('./errors/googleplusapierror')\n  , UserInfoError = require('./errors/userinfoerror');\n\n\n/**\n * `Strategy` constructor.\n *\n * The Google authentication strategy authenticates requests by delegating to\n * Google using the OAuth 2.0 protocol.\n *\n * Applications must supply a `verify` callback which accepts an `accessToken`,\n * `refreshToken` and service-specific `profile`, and then calls the `cb`\n * callback supplying a `user`, which should be set to `false` if the\n * credentials are not valid.  If an exception occured, `err` should be set.\n *\n * Options:\n *   - `clientID`      your Google application's client id\n *   - `clientSecret`  your Google application's client secret\n *   - `callbackURL`   URL to which Google will redirect the user after granting authorization\n *\n * Examples:\n *\n *     passport.use(new GoogleStrategy({\n *         clientID: '123-456-789',\n *         clientSecret: 'shhh-its-a-secret'\n *         callbackURL: 'https://www.example.net/auth/google/callback'\n *       },\n *       function(accessToken, refreshToken, profile, cb) {\n *         User.findOrCreate(..., function (err, user) {\n *           cb(err, user);\n *         });\n *       }\n *     ));\n *\n * @constructor\n * @param {object} options\n * @param {function} verify\n * @access public\n */\nfunction Strategy(options, verify) {\n  options = options || {};\n  options.authorizationURL = options.authorizationURL || 'https://accounts.google.com/o/oauth2/v2/auth';\n  options.tokenURL = options.tokenURL || 'https://www.googleapis.com/oauth2/v4/token';\n\n  OAuth2Strategy.call(this, options, verify);\n  this.name = 'google';\n  this._userProfileURL = options.userProfileURL || 'https://www.googleapis.com/oauth2/v3/userinfo';\n  \n  var url = uri.parse(this._userProfileURL);\n  if (url.pathname.indexOf('/userinfo') == (url.pathname.length - '/userinfo'.length)) {\n    this._userProfileFormat = 'openid';\n  } else {\n    this._userProfileFormat = 'google+'; // Google Sign-In\n  }\n}\n\n// Inherit from `OAuth2Strategy`.\nutil.inherits(Strategy, OAuth2Strategy);\n\n\n/**\n * Retrieve user profile from Google.\n *\n * This function constructs a normalized profile, with the following properties:\n *\n *   - `provider`         always set to `google`\n *   - `id`\n *   - `username`\n *   - `displayName`\n *\n * @param {string} accessToken\n * @param {function} done\n * @access protected\n */\nStrategy.prototype.userProfile = function(accessToken, done) {\n  var self = this;\n  this._oauth2.get(this._userProfileURL, accessToken, function (err, body, res) {\n    var json;\n    \n    if (err) {\n      if (err.data) {\n        try {\n          json = JSON.parse(err.data);\n        } catch (_) {}\n      }\n      \n      if (json && json.error && json.error.message) {\n        return done(new GooglePlusAPIError(json.error.message, json.error.code));\n      } else if (json && json.error && json.error_description) {\n        return done(new UserInfoError(json.error_description, json.error));\n      }\n      return done(new InternalOAuthError('Failed to fetch user profile', err));\n    }\n    \n    try {\n      json = JSON.parse(body);\n    } catch (ex) {\n      return done(new Error('Failed to parse user profile'));\n    }\n    \n    var profile;\n    switch (self._userProfileFormat) {\n    case 'openid':\n      profile = OpenIDProfile.parse(json);\n      break;\n    default: // Google Sign-In\n      profile = GooglePlusProfile.parse(json);\n      break;\n    }\n    \n    profile.provider  = 'google';\n    profile._raw = body;\n    profile._json = json;\n    \n    done(null, profile);\n  });\n}\n\n/**\n * Return extra Google-specific parameters to be included in the authorization\n * request.\n *\n * @param {object} options\n * @return {object}\n * @access protected\n */\nStrategy.prototype.authorizationParams = function(options) {\n  var params = {};\n  \n  // https://developers.google.com/identity/protocols/OAuth2WebServer\n  if (options.accessType) {\n    params['access_type'] = options.accessType;\n  }\n  if (options.prompt) {\n    params['prompt'] = options.prompt;\n  }\n  if (options.loginHint) {\n    params['login_hint'] = options.loginHint;\n  }\n  if (options.includeGrantedScopes) {\n    params['include_granted_scopes'] = true;\n  }\n  \n  // https://developers.google.com/identity/protocols/OpenIDConnect\n  if (options.display) {\n    // Specify what kind of display consent screen to display to users.\n    //   https://developers.google.com/accounts/docs/OpenIDConnect#authenticationuriparameters\n    params['display'] = options.display;\n  }\n  \n  // Google Apps for Work\n  if (options.hostedDomain || options.hd) {\n    // This parameter is derived from Google's OAuth 1.0 endpoint, and (although\n    // undocumented) is supported by Google's OAuth 2.0 endpoint was well.\n    //   https://developers.google.com/accounts/docs/OAuth_ref\n    params['hd'] = options.hostedDomain || options.hd;\n  }\n  \n  // Google+\n  if (options.requestVisibleActions) {\n    // Space separated list of allowed app actions\n    // as documented at:\n    //  https://developers.google.com/+/web/app-activities/#writing_an_app_activity_using_the_google_apis_client_libraries\n    //  https://developers.google.com/+/api/moment-types/\n    params['request_visible_actions'] = options.requestVisibleActions;\n  }\n  \n  // OpenID 2.0 migration\n  if (options.openIDRealm) {\n    // This parameter is needed when migrating users from Google's OpenID 2.0 to OAuth 2.0\n    //   https://developers.google.com/accounts/docs/OpenID?hl=ja#adjust-uri\n    params['openid.realm'] = options.openIDRealm;\n  }\n  \n  // Undocumented\n  if (options.approvalPrompt) {\n    params['approval_prompt'] = options.approvalPrompt;\n  }\n  if (options.userID) {\n    // Undocumented, but supported by Google's OAuth 2.0 endpoint.  Appears to\n    // be equivalent to `login_hint`.\n    params['user_id'] = options.userID;\n  }\n  \n  return params;\n}\n\n\n/**\n * Expose `Strategy`.\n */\nmodule.exports = Strategy;\n","// Load modules.\nvar Strategy = require('./strategy')\n  , AuthorizationError = require('./errors/authorizationerror')\n  , TokenError = require('./errors/tokenerror')\n  , InternalOAuthError = require('./errors/internaloautherror');\n\n\n// Expose Strategy.\nexports = module.exports = Strategy;\n\n// Exports.\nexports.Strategy = Strategy;\n\nexports.AuthorizationError = AuthorizationError;\nexports.TokenError = TokenError;\nexports.InternalOAuthError = InternalOAuthError;\n","// Load modules.\nvar passport = require('passport-strategy')\n  , url = require('url')\n  , uid = require('uid2')\n  , crypto = require('crypto')\n  , base64url = require('base64url')\n  , util = require('util')\n  , utils = require('./utils')\n  , OAuth2 = require('oauth').OAuth2\n  , NullStore = require('./state/null')\n  , NonceStore = require('./state/session')\n  , StateStore = require('./state/store')\n  , PKCEStateStore = require('./state/pkcesession')\n  , AuthorizationError = require('./errors/authorizationerror')\n  , TokenError = require('./errors/tokenerror')\n  , InternalOAuthError = require('./errors/internaloautherror');\n\n\n/**\n * Creates an instance of `OAuth2Strategy`.\n *\n * The OAuth 2.0 authentication strategy authenticates requests using the OAuth\n * 2.0 framework.\n *\n * OAuth 2.0 provides a facility for delegated authentication, whereby users can\n * authenticate using a third-party service such as Facebook.  Delegating in\n * this manner involves a sequence of events, including redirecting the user to\n * the third-party service for authorization.  Once authorization has been\n * granted, the user is redirected back to the application and an authorization\n * code can be used to obtain credentials.\n *\n * Applications must supply a `verify` callback, for which the function\n * signature is:\n *\n *     function(accessToken, refreshToken, profile, done) { ... }\n *\n * The verify callback is responsible for finding or creating the user, and\n * invoking `done` with the following arguments:\n *\n *     done(err, user, info);\n *\n * `user` should be set to `false` to indicate an authentication failure.\n * Additional `info` can optionally be passed as a third argument, typically\n * used to display informational messages.  If an exception occured, `err`\n * should be set.\n *\n * Options:\n *\n *   - `authorizationURL`  URL used to obtain an authorization grant\n *   - `tokenURL`          URL used to obtain an access token\n *   - `clientID`          identifies client to service provider\n *   - `clientSecret`      secret used to establish ownership of the client identifer\n *   - `callbackURL`       URL to which the service provider will redirect the user after obtaining authorization\n *   - `passReqToCallback` when `true`, `req` is the first argument to the verify callback (default: `false`)\n *\n * Examples:\n *\n *     passport.use(new OAuth2Strategy({\n *         authorizationURL: 'https://www.example.com/oauth2/authorize',\n *         tokenURL: 'https://www.example.com/oauth2/token',\n *         clientID: '123-456-789',\n *         clientSecret: 'shhh-its-a-secret'\n *         callbackURL: 'https://www.example.net/auth/example/callback'\n *       },\n *       function(accessToken, refreshToken, profile, done) {\n *         User.findOrCreate(..., function (err, user) {\n *           done(err, user);\n *         });\n *       }\n *     ));\n *\n * @constructor\n * @param {Object} options\n * @param {Function} verify\n * @api public\n */\nfunction OAuth2Strategy(options, verify) {\n  if (typeof options == 'function') {\n    verify = options;\n    options = undefined;\n  }\n  options = options || {};\n\n  if (!verify) { throw new TypeError('OAuth2Strategy requires a verify callback'); }\n  if (!options.authorizationURL) { throw new TypeError('OAuth2Strategy requires a authorizationURL option'); }\n  if (!options.tokenURL) { throw new TypeError('OAuth2Strategy requires a tokenURL option'); }\n  if (!options.clientID) { throw new TypeError('OAuth2Strategy requires a clientID option'); }\n\n  passport.Strategy.call(this);\n  this.name = 'oauth2';\n  this._verify = verify;\n\n  // NOTE: The _oauth2 property is considered \"protected\".  Subclasses are\n  //       allowed to use it when making protected resource requests to retrieve\n  //       the user profile.\n  this._oauth2 = new OAuth2(options.clientID,  options.clientSecret,\n                            '', options.authorizationURL, options.tokenURL, options.customHeaders);\n\n  this._callbackURL = options.callbackURL;\n  this._scope = options.scope;\n  this._scopeSeparator = options.scopeSeparator || ' ';\n  this._pkceMethod = (options.pkce === true) ? 'S256' : options.pkce;\n  this._key = options.sessionKey || ('oauth2:' + url.parse(options.authorizationURL).hostname);\n\n  if (options.store && typeof options.store == 'object') {\n    this._stateStore = options.store;\n  } else if (options.store) {\n    this._stateStore = options.pkce ? new PKCEStateStore({ key: this._key }) : new StateStore({ key: this._key });\n  } else if (options.state) {\n    this._stateStore = options.pkce ? new PKCEStateStore({ key: this._key }) : new NonceStore({ key: this._key });\n  } else {\n    if (options.pkce) { throw new TypeError('OAuth2Strategy requires `state: true` option when PKCE is enabled'); }\n    this._stateStore = new NullStore();\n  }\n  this._trustProxy = options.proxy;\n  this._passReqToCallback = options.passReqToCallback;\n  this._skipUserProfile = (options.skipUserProfile === undefined) ? false : options.skipUserProfile;\n}\n\n// Inherit from `passport.Strategy`.\nutil.inherits(OAuth2Strategy, passport.Strategy);\n\n\n/**\n * Authenticate request by delegating to a service provider using OAuth 2.0.\n *\n * @param {Object} req\n * @api protected\n */\nOAuth2Strategy.prototype.authenticate = function(req, options) {\n  options = options || {};\n  var self = this;\n\n  if (req.query && req.query.error) {\n    if (req.query.error == 'access_denied') {\n      return this.fail({ message: req.query.error_description });\n    } else {\n      return this.error(new AuthorizationError(req.query.error_description, req.query.error, req.query.error_uri));\n    }\n  }\n\n  var callbackURL = options.callbackURL || this._callbackURL;\n  if (callbackURL) {\n    var parsed = url.parse(callbackURL);\n    if (!parsed.protocol) {\n      // The callback URL is relative, resolve a fully qualified URL from the\n      // URL of the originating request.\n      callbackURL = url.resolve(utils.originalURL(req, { proxy: this._trustProxy }), callbackURL);\n    }\n  }\n\n  var meta = {\n    authorizationURL: this._oauth2._authorizeUrl,\n    tokenURL: this._oauth2._accessTokenUrl,\n    clientID: this._oauth2._clientId,\n    callbackURL: callbackURL\n  }\n\n  if ((req.query && req.query.code) || (req.body && req.body.code)) {\n    function loaded(err, ok, state) {\n      if (err) { return self.error(err); }\n      if (!ok) {\n        return self.fail(state, 403);\n      }\n\n      var code = (req.query && req.query.code) || (req.body && req.body.code);\n\n      var params = self.tokenParams(options);\n      params.grant_type = 'authorization_code';\n      if (callbackURL) { params.redirect_uri = callbackURL; }\n      if (typeof ok == 'string') { // PKCE\n        params.code_verifier = ok;\n      }\n\n      self._oauth2.getOAuthAccessToken(code, params,\n        function(err, accessToken, refreshToken, params) {\n          if (err) { return self.error(self._createOAuthError('Failed to obtain access token', err)); }\n          if (!accessToken) { return self.error(new Error('Failed to obtain access token')); }\n\n          self._loadUserProfile(accessToken, function(err, profile) {\n            if (err) { return self.error(err); }\n\n            function verified(err, user, info) {\n              if (err) { return self.error(err); }\n              if (!user) { return self.fail(info); }\n\n              info = info || {};\n              if (state) { info.state = state; }\n              self.success(user, info);\n            }\n\n            try {\n              if (self._passReqToCallback) {\n                var arity = self._verify.length;\n                if (arity == 6) {\n                  self._verify(req, accessToken, refreshToken, params, profile, verified);\n                } else { // arity == 5\n                  self._verify(req, accessToken, refreshToken, profile, verified);\n                }\n              } else {\n                var arity = self._verify.length;\n                if (arity == 5) {\n                  self._verify(accessToken, refreshToken, params, profile, verified);\n                } else { // arity == 4\n                  self._verify(accessToken, refreshToken, profile, verified);\n                }\n              }\n            } catch (ex) {\n              return self.error(ex);\n            }\n          });\n        }\n      );\n    }\n\n    var state = (req.query && req.query.state) || (req.body && req.body.state);\n    try {\n      var arity = this._stateStore.verify.length;\n      if (arity == 4) {\n        this._stateStore.verify(req, state, meta, loaded);\n      } else { // arity == 3\n        this._stateStore.verify(req, state, loaded);\n      }\n    } catch (ex) {\n      return this.error(ex);\n    }\n  } else {\n    var params = this.authorizationParams(options);\n    params.response_type = 'code';\n    if (callbackURL) { params.redirect_uri = callbackURL; }\n    var scope = options.scope || this._scope;\n    if (scope) {\n      if (Array.isArray(scope)) { scope = scope.join(this._scopeSeparator); }\n      params.scope = scope;\n    }\n    var verifier, challenge;\n\n    if (this._pkceMethod) {\n      verifier = base64url(crypto.pseudoRandomBytes(32))\n      switch (this._pkceMethod) {\n      case 'plain':\n        challenge = verifier;\n        break;\n      case 'S256':\n        challenge = base64url(crypto.createHash('sha256').update(verifier).digest());\n        break;\n      default:\n        return this.error(new Error('Unsupported code verifier transformation method: ' + this._pkceMethod));\n      }\n      \n      params.code_challenge = challenge;\n      params.code_challenge_method = this._pkceMethod;\n    }\n\n    var state = options.state;\n    if (state && typeof state == 'string') {\n      // NOTE: In passport-oauth2@1.5.0 and earlier, `state` could be passed as\n      //       an object.  However, it would result in an empty string being\n      //       serialized as the value of the query parameter by `url.format()`,\n      //       effectively ignoring the option.  This implies that `state` was\n      //       only functional when passed as a string value.\n      //\n      //       This fact is taken advantage of here to fall into the `else`\n      //       branch below when `state` is passed as an object.  In that case\n      //       the state will be automatically managed and persisted by the\n      //       state store.\n      params.state = state;\n      \n      var parsed = url.parse(this._oauth2._authorizeUrl, true);\n      utils.merge(parsed.query, params);\n      parsed.query['client_id'] = this._oauth2._clientId;\n      delete parsed.search;\n      var location = url.format(parsed);\n      this.redirect(location);\n    } else {\n      function stored(err, state) {\n        if (err) { return self.error(err); }\n\n        if (state) { params.state = state; }\n        var parsed = url.parse(self._oauth2._authorizeUrl, true);\n        utils.merge(parsed.query, params);\n        parsed.query['client_id'] = self._oauth2._clientId;\n        delete parsed.search;\n        var location = url.format(parsed);\n        self.redirect(location);\n      }\n\n      try {\n        var arity = this._stateStore.store.length;\n        if (arity == 5) {\n          this._stateStore.store(req, verifier, state, meta, stored);\n        } else if (arity == 4) {\n          this._stateStore.store(req, state, meta, stored);\n        } else if (arity == 3) {\n          this._stateStore.store(req, meta, stored);\n        } else { // arity == 2\n          this._stateStore.store(req, stored);\n        }\n      } catch (ex) {\n        return this.error(ex);\n      }\n    }\n  }\n};\n\n/**\n * Retrieve user profile from service provider.\n *\n * OAuth 2.0-based authentication strategies can overrride this function in\n * order to load the user's profile from the service provider.  This assists\n * applications (and users of those applications) in the initial registration\n * process by automatically submitting required information.\n *\n * @param {String} accessToken\n * @param {Function} done\n * @api protected\n */\nOAuth2Strategy.prototype.userProfile = function(accessToken, done) {\n  return done(null, {});\n};\n\n/**\n * Return extra parameters to be included in the authorization request.\n *\n * Some OAuth 2.0 providers allow additional, non-standard parameters to be\n * included when requesting authorization.  Since these parameters are not\n * standardized by the OAuth 2.0 specification, OAuth 2.0-based authentication\n * strategies can overrride this function in order to populate these parameters\n * as required by the provider.\n *\n * @param {Object} options\n * @return {Object}\n * @api protected\n */\nOAuth2Strategy.prototype.authorizationParams = function(options) {\n  return {};\n};\n\n/**\n * Return extra parameters to be included in the token request.\n *\n * Some OAuth 2.0 providers allow additional, non-standard parameters to be\n * included when requesting an access token.  Since these parameters are not\n * standardized by the OAuth 2.0 specification, OAuth 2.0-based authentication\n * strategies can overrride this function in order to populate these parameters\n * as required by the provider.\n *\n * @return {Object}\n * @api protected\n */\nOAuth2Strategy.prototype.tokenParams = function(options) {\n  return {};\n};\n\n/**\n * Parse error response from OAuth 2.0 endpoint.\n *\n * OAuth 2.0-based authentication strategies can overrride this function in\n * order to parse error responses received from the token endpoint, allowing the\n * most informative message to be displayed.\n *\n * If this function is not overridden, the body will be parsed in accordance\n * with RFC 6749, section 5.2.\n *\n * @param {String} body\n * @param {Number} status\n * @return {Error}\n * @api protected\n */\nOAuth2Strategy.prototype.parseErrorResponse = function(body, status) {\n  var json = JSON.parse(body);\n  if (json.error) {\n    return new TokenError(json.error_description, json.error, json.error_uri);\n  }\n  return null;\n};\n\n/**\n * Load user profile, contingent upon options.\n *\n * @param {String} accessToken\n * @param {Function} done\n * @api private\n */\nOAuth2Strategy.prototype._loadUserProfile = function(accessToken, done) {\n  var self = this;\n\n  function loadIt() {\n    return self.userProfile(accessToken, done);\n  }\n  function skipIt() {\n    return done(null);\n  }\n\n  if (typeof this._skipUserProfile == 'function' && this._skipUserProfile.length > 1) {\n    // async\n    this._skipUserProfile(accessToken, function(err, skip) {\n      if (err) { return done(err); }\n      if (!skip) { return loadIt(); }\n      return skipIt();\n    });\n  } else {\n    var skip = (typeof this._skipUserProfile == 'function') ? this._skipUserProfile() : this._skipUserProfile;\n    if (!skip) { return loadIt(); }\n    return skipIt();\n  }\n};\n\n/**\n * Create an OAuth error.\n *\n * @param {String} message\n * @param {Object|Error} err\n * @api private\n */\nOAuth2Strategy.prototype._createOAuthError = function(message, err) {\n  var e;\n  if (err.statusCode && err.data) {\n    try {\n      e = this.parseErrorResponse(err.data, err.statusCode);\n    } catch (_) {}\n  }\n  if (!e) { e = new InternalOAuthError(message, err); }\n  return e;\n};\n\n\n// Expose constructor.\nmodule.exports = OAuth2Strategy;\n","module.exports = require(\"url\");","/**\n * Module dependencies\n */\n\nvar crypto = require('crypto');\n\n/**\n * 62 characters in the ascii range that can be used in URLs without special\n * encoding.\n */\nvar UIDCHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n/**\n * Make a Buffer into a string ready for use in URLs\n *\n * @param {String} bytes a Buffer containing the bytes to convert\n * @returns {String} UID\n * @api private\n */\nfunction tostr(bytes) {\n  var r, i;\n\n  r = [];\n  for (i = 0; i < bytes.length; i++) {\n    r.push(UIDCHARS[bytes[i] % UIDCHARS.length]);\n  }\n\n  return r.join('');\n}\n\n/**\n * Generate an Unique Id\n *\n * @param {Number} length  The number of chars of the uid\n * @param {Number} cb (optional)  Callback for async uid generation\n * @api public\n */\n\nfunction uid(length, cb) {\n\n  if (typeof cb === 'undefined') {\n    return tostr(crypto.pseudoRandomBytes(length));\n  } else {\n    crypto.pseudoRandomBytes(length, function(err, bytes) {\n       if (err) return cb(err);\n       cb(null, tostr(bytes));\n    })\n  }\n}\n\n/**\n * Exports\n */\n\nmodule.exports = uid;\n","module.exports = require('./dist/base64url').default;\nmodule.exports.default = module.exports;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pad_string_1 = require(\"./pad-string\");\nfunction encode(input, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    if (Buffer.isBuffer(input)) {\n        return fromBase64(input.toString(\"base64\"));\n    }\n    return fromBase64(Buffer.from(input, encoding).toString(\"base64\"));\n}\n;\nfunction decode(base64url, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    return Buffer.from(toBase64(base64url), \"base64\").toString(encoding);\n}\nfunction toBase64(base64url) {\n    base64url = base64url.toString();\n    return pad_string_1.default(base64url)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n}\nfunction fromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction toBuffer(base64url) {\n    return Buffer.from(toBase64(base64url), \"base64\");\n}\nvar base64url = encode;\nbase64url.encode = encode;\nbase64url.decode = decode;\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.toBuffer = toBuffer;\nexports.default = base64url;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction padString(input) {\n    var segmentLength = 4;\n    var stringLength = input.length;\n    var diff = stringLength % segmentLength;\n    if (!diff) {\n        return input;\n    }\n    var position = stringLength;\n    var padLength = segmentLength - diff;\n    var paddedStringLength = stringLength + padLength;\n    var buffer = Buffer.alloc(paddedStringLength);\n    buffer.write(input);\n    while (padLength--) {\n        buffer.write(\"=\", position++);\n    }\n    return buffer.toString();\n}\nexports.default = padString;\n","exports.merge = require('utils-merge');\n\n/**\n * Reconstructs the original URL of the request.\n *\n * This function builds a URL that corresponds the original URL requested by the\n * client, including the protocol (http or https) and host.\n *\n * If the request passed through any proxies that terminate SSL, the\n * `X-Forwarded-Proto` header is used to detect if the request was encrypted to\n * the proxy, assuming that the proxy has been flagged as trusted.\n *\n * @param {http.IncomingMessage} req\n * @param {Object} [options]\n * @return {String}\n * @api private\n */\nexports.originalURL = function(req, options) {\n  options = options || {};\n  var app = req.app;\n  if (app && app.get && app.get('trust proxy')) {\n    options.proxy = true;\n  }\n  var trustProxy = options.proxy;\n  \n  var proto = (req.headers['x-forwarded-proto'] || '').toLowerCase()\n    , tls = req.connection.encrypted || (trustProxy && 'https' == proto.split(/\\s*,\\s*/)[0])\n    , host = (trustProxy && req.headers['x-forwarded-host']) || req.headers.host\n    , protocol = tls ? 'https' : 'http'\n    , path = req.url || '';\n  return protocol + '://' + host + path;\n};\n","exports.OAuth = require(\"./lib/oauth\").OAuth;\nexports.OAuthEcho = require(\"./lib/oauth\").OAuthEcho;\nexports.OAuth2 = require(\"./lib/oauth2\").OAuth2;","var crypto= require('crypto'),\n    sha1= require('./sha1'),\n    http= require('http'),\n    https= require('https'),\n    URL= require('url'),\n    querystring= require('querystring'),\n    OAuthUtils= require('./_utils');\n\nexports.OAuth= function(requestUrl, accessUrl, consumerKey, consumerSecret, version, authorize_callback, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = false;\n\n  this._requestUrl= requestUrl;\n  this._accessUrl= accessUrl;\n  this._consumerKey= consumerKey;\n  this._consumerSecret= this._encodeData( consumerSecret );\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n  this._version= version;\n  if( authorize_callback === undefined ) {\n    this._authorize_callback= \"oob\";\n  }\n  else {\n    this._authorize_callback= authorize_callback;\n  }\n\n  if( signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\")\n    throw new Error(\"Un-supported signature method: \" + signatureMethod )\n  this._signatureMethod= signatureMethod;\n  this._nonceSize= nonceSize || 32;\n  this._headers= customHeaders || {\"Accept\" : \"*/*\",\n                                   \"Connection\" : \"close\",\n                                   \"User-Agent\" : \"Node authentication\"}\n  this._clientOptions= this._defaultClientOptions= {\"requestTokenHttpMethod\": \"POST\",\n                                                    \"accessTokenHttpMethod\": \"POST\",\n                                                    \"followRedirects\": true};\n  this._oauthParameterSeperator = \",\";\n};\n\nexports.OAuthEcho= function(realm, verify_credentials, consumerKey, consumerSecret, version, signatureMethod, nonceSize, customHeaders) {\n  this._isEcho = true;\n\n  this._realm= realm;\n  this._verifyCredentials = verify_credentials;\n  this._consumerKey= consumerKey;\n  this._consumerSecret= this._encodeData( consumerSecret );\n  if (signatureMethod == \"RSA-SHA1\") {\n    this._privateKey = consumerSecret;\n  }\n  this._version= version;\n\n  if( signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\")\n    throw new Error(\"Un-supported signature method: \" + signatureMethod );\n  this._signatureMethod= signatureMethod;\n  this._nonceSize= nonceSize || 32;\n  this._headers= customHeaders || {\"Accept\" : \"*/*\",\n                                   \"Connection\" : \"close\",\n                                   \"User-Agent\" : \"Node authentication\"};\n  this._oauthParameterSeperator = \",\";\n}\n\nexports.OAuthEcho.prototype = exports.OAuth.prototype;\n\nexports.OAuth.prototype._getTimestamp= function() {\n  return Math.floor( (new Date()).getTime() / 1000 );\n}\n\nexports.OAuth.prototype._encodeData= function(toEncode){\n if( toEncode == null || toEncode == \"\" ) return \"\"\n else {\n    var result= encodeURIComponent(toEncode);\n    // Fix the mismatch between OAuth's  RFC3986's and Javascript's beliefs in what is right and wrong ;)\n    return result.replace(/\\!/g, \"%21\")\n                 .replace(/\\'/g, \"%27\")\n                 .replace(/\\(/g, \"%28\")\n                 .replace(/\\)/g, \"%29\")\n                 .replace(/\\*/g, \"%2A\");\n }\n}\n\nexports.OAuth.prototype._decodeData= function(toDecode) {\n  if( toDecode != null ) {\n    toDecode = toDecode.replace(/\\+/g, \" \");\n  }\n  return decodeURIComponent( toDecode);\n}\n\nexports.OAuth.prototype._getSignature= function(method, url, parameters, tokenSecret) {\n  var signatureBase= this._createSignatureBase(method, url, parameters);\n  return this._createSignature( signatureBase, tokenSecret );\n}\n\nexports.OAuth.prototype._normalizeUrl= function(url) {\n  var parsedUrl= URL.parse(url, true)\n   var port =\"\";\n   if( parsedUrl.port ) {\n     if( (parsedUrl.protocol == \"http:\" && parsedUrl.port != \"80\" ) ||\n         (parsedUrl.protocol == \"https:\" && parsedUrl.port != \"443\") ) {\n           port= \":\" + parsedUrl.port;\n         }\n   }\n\n  if( !parsedUrl.pathname  || parsedUrl.pathname == \"\" ) parsedUrl.pathname =\"/\";\n\n  return parsedUrl.protocol + \"//\" + parsedUrl.hostname + port + parsedUrl.pathname;\n}\n\n// Is the parameter considered an OAuth parameter\nexports.OAuth.prototype._isParameterNameAnOAuthParameter= function(parameter) {\n  var m = parameter.match('^oauth_');\n  if( m && ( m[0] === \"oauth_\" ) ) {\n    return true;\n  }\n  else {\n    return false;\n  }\n};\n\n// build the OAuth request authorization header\nexports.OAuth.prototype._buildAuthorizationHeaders= function(orderedParameters) {\n  var authHeader=\"OAuth \";\n  if( this._isEcho ) {\n    authHeader += 'realm=\"' + this._realm + '\",';\n  }\n\n  for( var i= 0 ; i < orderedParameters.length; i++) {\n     // Whilst the all the parameters should be included within the signature, only the oauth_ arguments\n     // should appear within the authorization header.\n     if( this._isParameterNameAnOAuthParameter(orderedParameters[i][0]) ) {\n      authHeader+= \"\" + this._encodeData(orderedParameters[i][0])+\"=\\\"\"+ this._encodeData(orderedParameters[i][1])+\"\\\"\"+ this._oauthParameterSeperator;\n     }\n  }\n\n  authHeader= authHeader.substring(0, authHeader.length-this._oauthParameterSeperator.length);\n  return authHeader;\n}\n\n// Takes an object literal that represents the arguments, and returns an array\n// of argument/value pairs.\nexports.OAuth.prototype._makeArrayOfArgumentsHash= function(argumentsHash) {\n  var argument_pairs= [];\n  for(var key in argumentsHash ) {\n    if (argumentsHash.hasOwnProperty(key)) {\n       var value= argumentsHash[key];\n       if( Array.isArray(value) ) {\n         for(var i=0;i<value.length;i++) {\n           argument_pairs[argument_pairs.length]= [key, value[i]];\n         }\n       }\n       else {\n         argument_pairs[argument_pairs.length]= [key, value];\n       }\n    }\n  }\n  return argument_pairs;\n}\n\n// Sorts the encoded key value pairs by encoded name, then encoded value\nexports.OAuth.prototype._sortRequestParams= function(argument_pairs) {\n  // Sort by name, then value.\n  argument_pairs.sort(function(a,b) {\n      if ( a[0]== b[0] )  {\n        return a[1] < b[1] ? -1 : 1;\n      }\n      else return a[0] < b[0] ? -1 : 1;\n  });\n\n  return argument_pairs;\n}\n\nexports.OAuth.prototype._normaliseRequestParams= function(args) {\n  var argument_pairs= this._makeArrayOfArgumentsHash(args);\n  // First encode them #3.4.1.3.2 .1\n  for(var i=0;i<argument_pairs.length;i++) {\n    argument_pairs[i][0]= this._encodeData( argument_pairs[i][0] );\n    argument_pairs[i][1]= this._encodeData( argument_pairs[i][1] );\n  }\n\n  // Then sort them #3.4.1.3.2 .2\n  argument_pairs= this._sortRequestParams( argument_pairs );\n\n  // Then concatenate together #3.4.1.3.2 .3 & .4\n  var args= \"\";\n  for(var i=0;i<argument_pairs.length;i++) {\n      args+= argument_pairs[i][0];\n      args+= \"=\"\n      args+= argument_pairs[i][1];\n      if( i < argument_pairs.length-1 ) args+= \"&\";\n  }\n  return args;\n}\n\nexports.OAuth.prototype._createSignatureBase= function(method, url, parameters) {\n  url= this._encodeData( this._normalizeUrl(url) );\n  parameters= this._encodeData( parameters );\n  return method.toUpperCase() + \"&\" + url + \"&\" + parameters;\n}\n\nexports.OAuth.prototype._createSignature= function(signatureBase, tokenSecret) {\n   if( tokenSecret === undefined ) var tokenSecret= \"\";\n   else tokenSecret= this._encodeData( tokenSecret );\n   // consumerSecret is already encoded\n   var key= this._consumerSecret + \"&\" + tokenSecret;\n\n   var hash= \"\"\n   if( this._signatureMethod == \"PLAINTEXT\" ) {\n     hash= key;\n   }\n   else if (this._signatureMethod == \"RSA-SHA1\") {\n     key = this._privateKey || \"\";\n     hash= crypto.createSign(\"RSA-SHA1\").update(signatureBase).sign(key, 'base64');\n   }\n   else {\n       if( crypto.Hmac ) {\n         hash = crypto.createHmac(\"sha1\", key).update(signatureBase).digest(\"base64\");\n       }\n       else {\n         hash= sha1.HMACSHA1(key, signatureBase);\n       }\n   }\n   return hash;\n}\nexports.OAuth.prototype.NONCE_CHARS= ['a','b','c','d','e','f','g','h','i','j','k','l','m','n',\n              'o','p','q','r','s','t','u','v','w','x','y','z','A','B',\n              'C','D','E','F','G','H','I','J','K','L','M','N','O','P',\n              'Q','R','S','T','U','V','W','X','Y','Z','0','1','2','3',\n              '4','5','6','7','8','9'];\n\nexports.OAuth.prototype._getNonce= function(nonceSize) {\n   var result = [];\n   var chars= this.NONCE_CHARS;\n   var char_pos;\n   var nonce_chars_length= chars.length;\n\n   for (var i = 0; i < nonceSize; i++) {\n       char_pos= Math.floor(Math.random() * nonce_chars_length);\n       result[i]=  chars[char_pos];\n   }\n   return result.join('');\n}\n\nexports.OAuth.prototype._createClient= function( port, hostname, method, path, headers, sslEnabled ) {\n  var options = {\n    host: hostname,\n    port: port,\n    path: path,\n    method: method,\n    headers: headers\n  };\n  var httpModel;\n  if( sslEnabled ) {\n    httpModel= https;\n  } else {\n    httpModel= http;\n  }\n  return httpModel.request(options);\n}\n\nexports.OAuth.prototype._prepareParameters= function( oauth_token, oauth_token_secret, method, url, extra_params ) {\n  var oauthParameters= {\n      \"oauth_timestamp\":        this._getTimestamp(),\n      \"oauth_nonce\":            this._getNonce(this._nonceSize),\n      \"oauth_version\":          this._version,\n      \"oauth_signature_method\": this._signatureMethod,\n      \"oauth_consumer_key\":     this._consumerKey\n  };\n\n  if( oauth_token ) {\n    oauthParameters[\"oauth_token\"]= oauth_token;\n  }\n\n  var sig;\n  if( this._isEcho ) {\n    sig = this._getSignature( \"GET\",  this._verifyCredentials,  this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  }\n  else {\n    if( extra_params ) {\n      for( var key in extra_params ) {\n        if (extra_params.hasOwnProperty(key)) oauthParameters[key]= extra_params[key];\n      }\n    }\n    var parsedUrl= URL.parse( url, false );\n\n    if( parsedUrl.query ) {\n      var key2;\n      var extraParameters= querystring.parse(parsedUrl.query);\n      for(var key in extraParameters ) {\n        var value= extraParameters[key];\n          if( typeof value == \"object\" ){\n            // TODO: This probably should be recursive\n            for(key2 in value){\n              oauthParameters[key + \"[\" + key2 + \"]\"] = value[key2];\n            }\n          } else {\n            oauthParameters[key]= value;\n          }\n        }\n    }\n\n    sig = this._getSignature( method,  url,  this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n  }\n\n  var orderedParameters= this._sortRequestParams( this._makeArrayOfArgumentsHash(oauthParameters) );\n  orderedParameters[orderedParameters.length]= [\"oauth_signature\", sig];\n  return orderedParameters;\n}\n\nexports.OAuth.prototype._performSecureRequest= function( oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type,  callback ) {\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, extra_params);\n\n  if( !post_content_type ) {\n    post_content_type= \"application/x-www-form-urlencoded\";\n  }\n  var parsedUrl= URL.parse( url, false );\n  if( parsedUrl.protocol == \"http:\" && !parsedUrl.port ) parsedUrl.port= 80;\n  if( parsedUrl.protocol == \"https:\" && !parsedUrl.port ) parsedUrl.port= 443;\n\n  var headers= {};\n  var authorization = this._buildAuthorizationHeaders(orderedParameters);\n  if ( this._isEcho ) {\n    headers[\"X-Verify-Credentials-Authorization\"]= authorization;\n  }\n  else {\n    headers[\"Authorization\"]= authorization;\n  }\n\n  headers[\"Host\"] = parsedUrl.host\n\n  for( var key in this._headers ) {\n    if (this._headers.hasOwnProperty(key)) {\n      headers[key]= this._headers[key];\n    }\n  }\n\n  // Filter out any passed extra_params that are really to do with OAuth\n  for(var key in extra_params) {\n    if( this._isParameterNameAnOAuthParameter( key ) ) {\n      delete extra_params[key];\n    }\n  }\n\n  if( (method == \"POST\" || method == \"PUT\")  && ( post_body == null && extra_params != null) ) {\n    // Fix the mismatch between the output of querystring.stringify() and this._encodeData()\n    post_body= querystring.stringify(extra_params)\n                       .replace(/\\!/g, \"%21\")\n                       .replace(/\\'/g, \"%27\")\n                       .replace(/\\(/g, \"%28\")\n                       .replace(/\\)/g, \"%29\")\n                       .replace(/\\*/g, \"%2A\");\n  }\n\n  if( post_body ) {\n      if ( Buffer.isBuffer(post_body) ) {\n          headers[\"Content-length\"]= post_body.length;\n      } else {\n          headers[\"Content-length\"]= Buffer.byteLength(post_body);\n      }\n  } else {\n      headers[\"Content-length\"]= 0;\n  }\n\n  headers[\"Content-Type\"]= post_content_type;\n\n  var path;\n  if( !parsedUrl.pathname  || parsedUrl.pathname == \"\" ) parsedUrl.pathname =\"/\";\n  if( parsedUrl.query ) path= parsedUrl.pathname + \"?\"+ parsedUrl.query ;\n  else path= parsedUrl.pathname;\n\n  var request;\n  if( parsedUrl.protocol == \"https:\" ) {\n    request= this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers, true);\n  }\n  else {\n    request= this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers);\n  }\n\n  var clientOptions = this._clientOptions;\n  if( callback ) {\n    var data=\"\";\n    var self= this;\n\n    // Some hosts *cough* google appear to close the connection early / send no content-length header\n    // allow this behaviour.\n    var allowEarlyClose= OAuthUtils.isAnEarlyCloseHost( parsedUrl.hostname );\n    var callbackCalled= false;\n    var passBackControl = function( response ) {\n      if(!callbackCalled) {\n        callbackCalled= true;\n        if ( response.statusCode >= 200 && response.statusCode <= 299 ) {\n          callback(null, data, response);\n        } else {\n          // Follow 301 or 302 redirects with Location HTTP header\n          if((response.statusCode == 301 || response.statusCode == 302) && clientOptions.followRedirects && response.headers && response.headers.location) {\n            self._performSecureRequest( oauth_token, oauth_token_secret, method, response.headers.location, extra_params, post_body, post_content_type,  callback);\n          }\n          else {\n            callback({ statusCode: response.statusCode, data: data }, data, response);\n          }\n        }\n      }\n    }\n\n    request.on('response', function (response) {\n      response.setEncoding('utf8');\n      response.on('data', function (chunk) {\n        data+=chunk;\n      });\n      response.on('end', function () {\n        passBackControl( response );\n      });\n      response.on('close', function () {\n        if( allowEarlyClose ) {\n          passBackControl( response );\n        }\n      });\n    });\n\n    request.on(\"error\", function(err) {\n      if(!callbackCalled) {\n        callbackCalled= true;\n        callback( err )\n      }\n    });\n\n    if( (method == \"POST\" || method ==\"PUT\") && post_body != null && post_body != \"\" ) {\n      request.write(post_body);\n    }\n    request.end();\n  }\n  else {\n    if( (method == \"POST\" || method ==\"PUT\") && post_body != null && post_body != \"\" ) {\n      request.write(post_body);\n    }\n    return request;\n  }\n\n  return;\n}\n\nexports.OAuth.prototype.setClientOptions= function(options) {\n  var key,\n      mergedOptions= {},\n      hasOwnProperty= Object.prototype.hasOwnProperty;\n\n  for( key in this._defaultClientOptions ) {\n    if( !hasOwnProperty.call(options, key) ) {\n      mergedOptions[key]= this._defaultClientOptions[key];\n    } else {\n      mergedOptions[key]= options[key];\n    }\n  }\n\n  this._clientOptions= mergedOptions;\n};\n\nexports.OAuth.prototype.getOAuthAccessToken= function(oauth_token, oauth_token_secret, oauth_verifier,  callback) {\n  var extraParams= {};\n  if( typeof oauth_verifier == \"function\" ) {\n    callback= oauth_verifier;\n  } else {\n    extraParams.oauth_verifier= oauth_verifier;\n  }\n\n   this._performSecureRequest( oauth_token, oauth_token_secret, this._clientOptions.accessTokenHttpMethod, this._accessUrl, extraParams, null, null, function(error, data, response) {\n         if( error ) callback(error);\n         else {\n           var results= querystring.parse( data );\n           var oauth_access_token= results[\"oauth_token\"];\n           delete results[\"oauth_token\"];\n           var oauth_access_token_secret= results[\"oauth_token_secret\"];\n           delete results[\"oauth_token_secret\"];\n           callback(null, oauth_access_token, oauth_access_token_secret, results );\n         }\n   })\n}\n\n// Deprecated\nexports.OAuth.prototype.getProtectedResource= function(url, method, oauth_token, oauth_token_secret, callback) {\n  this._performSecureRequest( oauth_token, oauth_token_secret, method, url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype.delete= function(url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest( oauth_token, oauth_token_secret, \"DELETE\", url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype.get= function(url, oauth_token, oauth_token_secret, callback) {\n  return this._performSecureRequest( oauth_token, oauth_token_secret, \"GET\", url, null, \"\", null, callback );\n}\n\nexports.OAuth.prototype._putOrPost= function(method, url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  var extra_params= null;\n  if( typeof post_content_type == \"function\" ) {\n    callback= post_content_type;\n    post_content_type= null;\n  }\n  if ( typeof post_body != \"string\" && !Buffer.isBuffer(post_body) ) {\n    post_content_type= \"application/x-www-form-urlencoded\"\n    extra_params= post_body;\n    post_body= null;\n  }\n  return this._performSecureRequest( oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback );\n}\n\n\nexports.OAuth.prototype.put= function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"PUT\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n}\n\nexports.OAuth.prototype.post= function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n  return this._putOrPost(\"POST\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n}\n\n/**\n * Gets a request token from the OAuth provider and passes that information back\n * to the calling code.\n *\n * The callback should expect a function of the following form:\n *\n * function(err, token, token_secret, parsedQueryString) {}\n *\n * This method has optional parameters so can be called in the following 2 ways:\n *\n * 1) Primary use case: Does a basic request with no extra parameters\n *  getOAuthRequestToken( callbackFunction )\n *\n * 2) As above but allows for provision of extra parameters to be sent as part of the query to the server.\n *  getOAuthRequestToken( extraParams, callbackFunction )\n *\n * N.B. This method will HTTP POST verbs by default, if you wish to override this behaviour you will\n * need to provide a requestTokenHttpMethod option when creating the client.\n *\n **/\nexports.OAuth.prototype.getOAuthRequestToken= function( extraParams, callback ) {\n   if( typeof extraParams == \"function\" ){\n     callback = extraParams;\n     extraParams = {};\n   }\n  // Callbacks are 1.0A related\n  if( this._authorize_callback ) {\n    extraParams[\"oauth_callback\"]= this._authorize_callback;\n  }\n  this._performSecureRequest( null, null, this._clientOptions.requestTokenHttpMethod, this._requestUrl, extraParams, null, null, function(error, data, response) {\n    if( error ) callback(error);\n    else {\n      var results= querystring.parse(data);\n\n      var oauth_token= results[\"oauth_token\"];\n      var oauth_token_secret= results[\"oauth_token_secret\"];\n      delete results[\"oauth_token\"];\n      delete results[\"oauth_token_secret\"];\n      callback(null, oauth_token, oauth_token_secret,  results );\n    }\n  });\n}\n\nexports.OAuth.prototype.signUrl= function(url, oauth_token, oauth_token_secret, method) {\n\n  if( method === undefined ) {\n    var method= \"GET\";\n  }\n\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n  var parsedUrl= URL.parse( url, false );\n\n  var query=\"\";\n  for( var i= 0 ; i < orderedParameters.length; i++) {\n    query+= orderedParameters[i][0]+\"=\"+ this._encodeData(orderedParameters[i][1]) + \"&\";\n  }\n  query= query.substring(0, query.length-1);\n\n  return parsedUrl.protocol + \"//\"+ parsedUrl.host + parsedUrl.pathname + \"?\" + query;\n};\n\nexports.OAuth.prototype.authHeader= function(url, oauth_token, oauth_token_secret, method) {\n  if( method === undefined ) {\n    var method= \"GET\";\n  }\n\n  var orderedParameters= this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n  return this._buildAuthorizationHeaders(orderedParameters);\n};\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS 180-1\n * Version 2.2 Copyright Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\nvar hexcase = 1;  /* hex output format. 0 - lowercase; 1 - uppercase        */\nvar b64pad  = \"=\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nfunction hex_sha1(s)    { return rstr2hex(rstr_sha1(str2rstr_utf8(s))); }\nfunction b64_sha1(s)    { return rstr2b64(rstr_sha1(str2rstr_utf8(s))); }\nfunction any_sha1(s, e) { return rstr2any(rstr_sha1(str2rstr_utf8(s)), e); }\nfunction hex_hmac_sha1(k, d)\n  { return rstr2hex(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d))); }\nfunction b64_hmac_sha1(k, d)\n  { return rstr2b64(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d))); }\nfunction any_hmac_sha1(k, d, e)\n  { return rstr2any(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d)), e); }\n\n/*\n * Perform a simple self-test to see if the VM is working\n */\nfunction sha1_vm_test()\n{\n  return hex_sha1(\"abc\").toLowerCase() == \"a9993e364706816aba3e25717850c26c9cd0d89d\";\n}\n\n/*\n * Calculate the SHA1 of a raw string\n */\nfunction rstr_sha1(s)\n{\n  return binb2rstr(binb_sha1(rstr2binb(s), s.length * 8));\n}\n\n/*\n * Calculate the HMAC-SHA1 of a key and some data (raw strings)\n */\nfunction rstr_hmac_sha1(key, data)\n{\n  var bkey = rstr2binb(key);\n  if(bkey.length > 16) bkey = binb_sha1(bkey, key.length * 8);\n\n  var ipad = Array(16), opad = Array(16);\n  for(var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = binb_sha1(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\n  return binb2rstr(binb_sha1(opad.concat(hash), 512 + 160));\n}\n\n/*\n * Convert a raw string to a hex string\n */\nfunction rstr2hex(input)\n{\n  try { hexcase } catch(e) { hexcase=0; }\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n  var output = \"\";\n  var x;\n  for(var i = 0; i < input.length; i++)\n  {\n    x = input.charCodeAt(i);\n    output += hex_tab.charAt((x >>> 4) & 0x0F)\n           +  hex_tab.charAt( x        & 0x0F);\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to a base-64 string\n */\nfunction rstr2b64(input)\n{\n  try { b64pad } catch(e) { b64pad=''; }\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var output = \"\";\n  var len = input.length;\n  for(var i = 0; i < len; i += 3)\n  {\n    var triplet = (input.charCodeAt(i) << 16)\n                | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\n                | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\n    for(var j = 0; j < 4; j++)\n    {\n      if(i * 8 + j * 6 > input.length * 8) output += b64pad;\n      else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\n    }\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to an arbitrary string encoding\n */\nfunction rstr2any(input, encoding)\n{\n  var divisor = encoding.length;\n  var remainders = Array();\n  var i, q, x, quotient;\n\n  /* Convert to an array of 16-bit big-endian values, forming the dividend */\n  var dividend = Array(Math.ceil(input.length / 2));\n  for(i = 0; i < dividend.length; i++)\n  {\n    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n  }\n\n  /*\n   * Repeatedly perform a long division. The binary array forms the dividend,\n   * the length of the encoding is the divisor. Once computed, the quotient\n   * forms the dividend for the next step. We stop when the dividend is zero.\n   * All remainders are stored for later use.\n   */\n  while(dividend.length > 0)\n  {\n    quotient = Array();\n    x = 0;\n    for(i = 0; i < dividend.length; i++)\n    {\n      x = (x << 16) + dividend[i];\n      q = Math.floor(x / divisor);\n      x -= q * divisor;\n      if(quotient.length > 0 || q > 0)\n        quotient[quotient.length] = q;\n    }\n    remainders[remainders.length] = x;\n    dividend = quotient;\n  }\n\n  /* Convert the remainders to the output string */\n  var output = \"\";\n  for(i = remainders.length - 1; i >= 0; i--)\n    output += encoding.charAt(remainders[i]);\n\n  /* Append leading zero equivalents */\n  var full_length = Math.ceil(input.length * 8 /\n                                    (Math.log(encoding.length) / Math.log(2)))\n  for(i = output.length; i < full_length; i++)\n    output = encoding[0] + output;\n\n  return output;\n}\n\n/*\n * Encode a string as utf-8.\n * For efficiency, this assumes the input is valid utf-16.\n */\nfunction str2rstr_utf8(input)\n{\n  var output = \"\";\n  var i = -1;\n  var x, y;\n\n  while(++i < input.length)\n  {\n    /* Decode utf-16 surrogate pairs */\n    x = input.charCodeAt(i);\n    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n    if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\n    {\n      x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n      i++;\n    }\n\n    /* Encode output as utf-8 */\n    if(x <= 0x7F)\n      output += String.fromCharCode(x);\n    else if(x <= 0x7FF)\n      output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0xFFFF)\n      output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0x1FFFFF)\n      output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                                    0x80 | ((x >>> 12) & 0x3F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n  }\n  return output;\n}\n\n/*\n * Encode a string as utf-16\n */\nfunction str2rstr_utf16le(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length; i++)\n    output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,\n                                  (input.charCodeAt(i) >>> 8) & 0xFF);\n  return output;\n}\n\nfunction str2rstr_utf16be(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length; i++)\n    output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\n                                   input.charCodeAt(i)        & 0xFF);\n  return output;\n}\n\n/*\n * Convert a raw string to an array of big-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nfunction rstr2binb(input)\n{\n  var output = Array(input.length >> 2);\n  for(var i = 0; i < output.length; i++)\n    output[i] = 0;\n  for(var i = 0; i < input.length * 8; i += 8)\n    output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\n  return output;\n}\n\n/*\n * Convert an array of big-endian words to a string\n */\nfunction binb2rstr(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length * 32; i += 8)\n    output += String.fromCharCode((input[i>>5] >>> (24 - i % 32)) & 0xFF);\n  return output;\n}\n\n/*\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\n */\nfunction binb_sha1(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << (24 - len % 32);\n  x[((len + 64 >> 9) << 4) + 15] = len;\n\n  var w = Array(80);\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n  var e = -1009589776;\n\n  for(var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    var olde = e;\n\n    for(var j = 0; j < 80; j++)\n    {\n      if(j < 16) w[j] = x[i + j];\n      else w[j] = bit_rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\n      var t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)),\n                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\n      e = d;\n      d = c;\n      c = bit_rol(b, 30);\n      b = a;\n      a = t;\n    }\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n    e = safe_add(e, olde);\n  }\n  return Array(a, b, c, d, e);\n\n}\n\n/*\n * Perform the appropriate triplet combination function for the current\n * iteration\n */\nfunction sha1_ft(t, b, c, d)\n{\n  if(t < 20) return (b & c) | ((~b) & d);\n  if(t < 40) return b ^ c ^ d;\n  if(t < 60) return (b & c) | (b & d) | (c & d);\n  return b ^ c ^ d;\n}\n\n/*\n * Determine the appropriate additive constant for the current iteration\n */\nfunction sha1_kt(t)\n{\n  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\n         (t < 60) ? -1894007588 : -899497514;\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\nexports.HMACSHA1= function(key, data) {\n  return b64_hmac_sha1(key, data);\n}","module.exports = require(\"https\");","module.exports = require(\"querystring\");","// Returns true if this is a host that closes *before* it ends?!?!\nmodule.exports.isAnEarlyCloseHost= function( hostName ) {\n  return hostName && hostName.match(\".*google(apis)?.com$\")\n}","var querystring= require('querystring'),\n    crypto= require('crypto'),\n    https= require('https'),\n    http= require('http'),\n    URL= require('url'),\n    OAuthUtils= require('./_utils');\n\nexports.OAuth2= function(clientId, clientSecret, baseSite, authorizePath, accessTokenPath, customHeaders) {\n  this._clientId= clientId;\n  this._clientSecret= clientSecret;\n  this._baseSite= baseSite;\n  this._authorizeUrl= authorizePath || \"/oauth/authorize\";\n  this._accessTokenUrl= accessTokenPath || \"/oauth/access_token\";\n  this._accessTokenName= \"access_token\";\n  this._authMethod= \"Bearer\";\n  this._customHeaders = customHeaders || {};\n  this._useAuthorizationHeaderForGET= false;\n\n  //our agent\n  this._agent = undefined;\n};\n\n// Allows you to set an agent to use instead of the default HTTP or\n// HTTPS agents. Useful when dealing with your own certificates.\nexports.OAuth2.prototype.setAgent = function(agent) {\n  this._agent = agent;\n};\n\n// This 'hack' method is required for sites that don't use\n// 'access_token' as the name of the access token (for requests).\n// ( http://tools.ietf.org/html/draft-ietf-oauth-v2-16#section-7 )\n// it isn't clear what the correct value should be atm, so allowing\n// for specific (temporary?) override for now.\nexports.OAuth2.prototype.setAccessTokenName= function ( name ) {\n  this._accessTokenName= name;\n}\n\n// Sets the authorization method for Authorization header.\n// e.g. Authorization: Bearer <token>  # \"Bearer\" is the authorization method.\nexports.OAuth2.prototype.setAuthMethod = function ( authMethod ) {\n  this._authMethod = authMethod;\n};\n\n\n// If you use the OAuth2 exposed 'get' method (and don't construct your own _request call )\n// this will specify whether to use an 'Authorize' header instead of passing the access_token as a query parameter\nexports.OAuth2.prototype.useAuthorizationHeaderforGET = function(useIt) {\n  this._useAuthorizationHeaderForGET= useIt;\n}\n\nexports.OAuth2.prototype._getAccessTokenUrl= function() {\n  return this._baseSite + this._accessTokenUrl; /* + \"?\" + querystring.stringify(params); */\n}\n\n// Build the authorization header. In particular, build the part after the colon.\n// e.g. Authorization: Bearer <token>  # Build \"Bearer <token>\"\nexports.OAuth2.prototype.buildAuthHeader= function(token) {\n  return this._authMethod + ' ' + token;\n};\n\nexports.OAuth2.prototype._chooseHttpLibrary= function( parsedUrl ) {\n  var http_library= https;\n  // As this is OAUth2, we *assume* https unless told explicitly otherwise.\n  if( parsedUrl.protocol != \"https:\" ) {\n    http_library= http;\n  }\n  return http_library;\n};\n\nexports.OAuth2.prototype._request= function(method, url, headers, post_body, access_token, callback) {\n\n  var parsedUrl= URL.parse( url, true );\n  if( parsedUrl.protocol == \"https:\" && !parsedUrl.port ) {\n    parsedUrl.port= 443;\n  }\n\n  var http_library= this._chooseHttpLibrary( parsedUrl );\n\n\n  var realHeaders= {};\n  for( var key in this._customHeaders ) {\n    realHeaders[key]= this._customHeaders[key];\n  }\n  if( headers ) {\n    for(var key in headers) {\n      realHeaders[key] = headers[key];\n    }\n  }\n  realHeaders['Host']= parsedUrl.host;\n\n  if (!realHeaders['User-Agent']) {\n    realHeaders['User-Agent'] = 'Node-oauth';\n  }\n\n  if( post_body ) {\n      if ( Buffer.isBuffer(post_body) ) {\n          realHeaders[\"Content-Length\"]= post_body.length;\n      } else {\n          realHeaders[\"Content-Length\"]= Buffer.byteLength(post_body);\n      }\n  } else {\n      realHeaders[\"Content-length\"]= 0;\n  }\n\n  if( access_token && !('Authorization' in realHeaders)) {\n    if( ! parsedUrl.query ) parsedUrl.query= {};\n    parsedUrl.query[this._accessTokenName]= access_token;\n  }\n\n  var queryStr= querystring.stringify(parsedUrl.query);\n  if( queryStr ) queryStr=  \"?\" + queryStr;\n  var options = {\n    host:parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.pathname + queryStr,\n    method: method,\n    headers: realHeaders\n  };\n\n  this._executeRequest( http_library, options, post_body, callback );\n}\n\nexports.OAuth2.prototype._executeRequest= function( http_library, options, post_body, callback ) {\n  // Some hosts *cough* google appear to close the connection early / send no content-length header\n  // allow this behaviour.\n  var allowEarlyClose= OAuthUtils.isAnEarlyCloseHost(options.host);\n  var callbackCalled= false;\n  function passBackControl( response, result ) {\n    if(!callbackCalled) {\n      callbackCalled=true;\n      if( !(response.statusCode >= 200 && response.statusCode <= 299) && (response.statusCode != 301) && (response.statusCode != 302) ) {\n        callback({ statusCode: response.statusCode, data: result });\n      } else {\n        callback(null, result, response);\n      }\n    }\n  }\n\n  var result= \"\";\n\n  //set the agent on the request options\n  if (this._agent) {\n    options.agent = this._agent;\n  }\n\n  var request = http_library.request(options);\n  request.on('response', function (response) {\n    response.on(\"data\", function (chunk) {\n      result+= chunk\n    });\n    response.on(\"close\", function (err) {\n      if( allowEarlyClose ) {\n        passBackControl( response, result );\n      }\n    });\n    response.addListener(\"end\", function () {\n      passBackControl( response, result );\n    });\n  });\n  request.on('error', function(e) {\n    // `www.googleapis.com` does `ECONNRESET` just after data is received in `passBackControl`\n    // this prevents the callback from being called twice, first in passBackControl and second time in here\n    // see also NodeJS Stream documentation: \"The 'error' event may be emitted by a Readable implementation at any time\"\n    if(!callbackCalled) {\n      callbackCalled= true;\n      callback(e);\n    }\n  });\n\n  if( (options.method == 'POST' || options.method == 'PUT') && post_body ) {\n     request.write(post_body);\n  }\n  request.end();\n}\n\nexports.OAuth2.prototype.getAuthorizeUrl= function( params ) {\n  var params= params || {};\n  params['client_id'] = this._clientId;\n  return this._baseSite + this._authorizeUrl + \"?\" + querystring.stringify(params);\n}\n\nexports.OAuth2.prototype.getOAuthAccessToken= function(code, params, callback) {\n  var params= params || {};\n  params['client_id'] = this._clientId;\n  params['client_secret'] = this._clientSecret;\n  var codeParam = (params.grant_type === 'refresh_token') ? 'refresh_token' : 'code';\n  params[codeParam]= code;\n\n  var post_data= querystring.stringify( params );\n  var post_headers= {\n       'Content-Type': 'application/x-www-form-urlencoded'\n   };\n\n\n  this._request(\"POST\", this._getAccessTokenUrl(), post_headers, post_data, null, function(error, data, response) {\n    if( error )  callback(error);\n    else {\n      var results;\n      try {\n        // As of http://tools.ietf.org/html/draft-ietf-oauth-v2-07\n        // responses should be in JSON\n        results= JSON.parse( data );\n      }\n      catch(e) {\n        // .... However both Facebook + Github currently use rev05 of the spec\n        // and neither seem to specify a content-type correctly in their response headers :(\n        // clients of these services will suffer a *minor* performance cost of the exception\n        // being thrown\n        results= querystring.parse( data );\n      }\n      var access_token= results[\"access_token\"];\n      var refresh_token= results[\"refresh_token\"];\n      delete results[\"refresh_token\"];\n      callback(null, access_token, refresh_token, results); // callback results =-=\n    }\n  });\n}\n\n// Deprecated\nexports.OAuth2.prototype.getProtectedResource= function(url, access_token, callback) {\n  this._request(\"GET\", url, {}, \"\", access_token, callback );\n}\n\nexports.OAuth2.prototype.get= function(url, access_token, callback) {\n  if( this._useAuthorizationHeaderForGET ) {\n    var headers= {'Authorization': this.buildAuthHeader(access_token) }\n    access_token= null;\n  }\n  else {\n    headers= {};\n  }\n  this._request(\"GET\", url, headers, \"\", access_token, callback );\n}\n","function NullStore(options) {\n}\n\nNullStore.prototype.store = function(req, cb) {\n  cb();\n}\n\nNullStore.prototype.verify = function(req, providedState, cb) {\n  cb(null, true);\n}\n\n\nmodule.exports = NullStore;\n","var uid = require('uid2');\n\n/**\n * Creates an instance of `SessionStore`.\n *\n * This is the state store implementation for the OAuth2Strategy used when\n * the `state` option is enabled.  It generates a random state and stores it in\n * `req.session` and verifies it when the service provider redirects the user\n * back to the application.\n *\n * This state store requires session support.  If no session exists, an error\n * will be thrown.\n *\n * Options:\n *\n *   - `key`  The key in the session under which to store the state\n *\n * @constructor\n * @param {Object} options\n * @api public\n */\nfunction SessionStore(options) {\n  if (!options.key) { throw new TypeError('Session-based state store requires a session key'); }\n  this._key = options.key;\n}\n\n/**\n * Store request state.\n *\n * This implementation simply generates a random string and stores the value in\n * the session, where it will be used for verification when the user is\n * redirected back to the application.\n *\n * @param {Object} req\n * @param {Function} callback\n * @api protected\n */\nSessionStore.prototype.store = function(req, callback) {\n  if (!req.session) { return callback(new Error('OAuth 2.0 authentication requires session support when using state. Did you forget to use express-session middleware?')); }\n\n  var key = this._key;\n  var state = uid(24);\n  if (!req.session[key]) { req.session[key] = {}; }\n  req.session[key].state = state;\n  callback(null, state);\n};\n\n/**\n * Verify request state.\n *\n * This implementation simply compares the state parameter in the request to the\n * value generated earlier and stored in the session.\n *\n * @param {Object} req\n * @param {String} providedState\n * @param {Function} callback\n * @api protected\n */\nSessionStore.prototype.verify = function(req, providedState, callback) {\n  if (!req.session) { return callback(new Error('OAuth 2.0 authentication requires session support when using state. Did you forget to use express-session middleware?')); }\n\n  var key = this._key;\n  if (!req.session[key]) {\n    return callback(null, false, { message: 'Unable to verify authorization request state.' });\n  }\n\n  var state = req.session[key].state;\n  if (!state) {\n    return callback(null, false, { message: 'Unable to verify authorization request state.' });\n  }\n\n  delete req.session[key].state;\n  if (Object.keys(req.session[key]).length === 0) {\n    delete req.session[key];\n  }\n\n  if (state !== providedState) {\n    return callback(null, false, { message: 'Invalid authorization request state.' });\n  }\n\n  return callback(null, true);\n};\n\n// Expose constructor.\nmodule.exports = SessionStore;\n","var uid = require('uid2');\n\n/**\n * Creates an instance of `SessionStore`.\n *\n * This is the state store implementation for the OAuth2Strategy used when\n * the `state` option is enabled.  It generates a random state and stores it in\n * `req.session` and verifies it when the service provider redirects the user\n * back to the application.\n *\n * This state store requires session support.  If no session exists, an error\n * will be thrown.\n *\n * Options:\n *\n *   - `key`  The key in the session under which to store the state\n *\n * @constructor\n * @param {Object} options\n * @api public\n */\nfunction SessionStore(options) {\n  if (!options.key) { throw new TypeError('Session-based state store requires a session key'); }\n  this._key = options.key;\n}\n\n/**\n * Store request state.\n *\n * This implementation simply generates a random string and stores the value in\n * the session, where it will be used for verification when the user is\n * redirected back to the application.\n *\n * @param {Object} req\n * @param {Function} callback\n * @api protected\n */\nSessionStore.prototype.store = function(req, state, meta, callback) {\n  if (!req.session) { return callback(new Error('OAuth 2.0 authentication requires session support when using state. Did you forget to use express-session middleware?')); }\n\n  var key = this._key;\n  var sstate = {\n    handle: uid(24)\n  };\n  if (state) { sstate.state = state; }\n  if (!req.session[key]) { req.session[key] = {}; }\n  req.session[key].state = sstate;\n  callback(null, sstate.handle);\n};\n\n/**\n * Verify request state.\n *\n * This implementation simply compares the state parameter in the request to the\n * value generated earlier and stored in the session.\n *\n * @param {Object} req\n * @param {String} providedState\n * @param {Function} callback\n * @api protected\n */\nSessionStore.prototype.verify = function(req, providedState, callback) {\n  if (!req.session) { return callback(new Error('OAuth 2.0 authentication requires session support when using state. Did you forget to use express-session middleware?')); }\n\n  var key = this._key;\n  if (!req.session[key]) {\n    return callback(null, false, { message: 'Unable to verify authorization request state.' });\n  }\n\n  var state = req.session[key].state;\n  if (!state) {\n    return callback(null, false, { message: 'Unable to verify authorization request state.' });\n  }\n\n  delete req.session[key].state;\n  if (Object.keys(req.session[key]).length === 0) {\n    delete req.session[key];\n  }\n\n  if (state.handle !== providedState) {\n    return callback(null, false, { message: 'Invalid authorization request state.' });\n  }\n\n  return callback(null, true, state.state);\n};\n\n// Expose constructor.\nmodule.exports = SessionStore;\n","var uid = require('uid2');\n\n/**\n * Creates an instance of `SessionStore`.\n *\n * This is the state store implementation for the OAuth2Strategy used when\n * the `state` option is enabled.  It generates a random state and stores it in\n * `req.session` and verifies it when the service provider redirects the user\n * back to the application.\n *\n * This state store requires session support.  If no session exists, an error\n * will be thrown.\n *\n * Options:\n *\n *   - `key`  The key in the session under which to store the state\n *\n * @constructor\n * @param {Object} options\n * @api public\n */\nfunction PKCESessionStore(options) {\n  if (!options.key) { throw new TypeError('Session-based state store requires a session key'); }\n  this._key = options.key;\n}\n\n/**\n * Store request state.\n *\n * This implementation simply generates a random string and stores the value in\n * the session, where it will be used for verification when the user is\n * redirected back to the application.\n *\n * @param {Object} req\n * @param {Function} callback\n * @api protected\n */\nPKCESessionStore.prototype.store = function(req, verifier, state, meta, callback) {\n  if (!req.session) { return callback(new Error('OAuth 2.0 authentication requires session support when using state. Did you forget to use express-session middleware?')); }\n\n  var key = this._key;\n  var sstate = {\n    handle: uid(24),\n    code_verifier: verifier\n  };\n  if (state) { sstate.state = state; }\n  if (!req.session[key]) { req.session[key] = {}; }\n  req.session[key].state = sstate;\n  callback(null, sstate.handle);\n};\n\n/**\n * Verify request state.\n *\n * This implementation simply compares the state parameter in the request to the\n * value generated earlier and stored in the session.\n *\n * @param {Object} req\n * @param {String} providedState\n * @param {Function} callback\n * @api protected\n */\nPKCESessionStore.prototype.verify = function(req, providedState, callback) {\n  if (!req.session) { return callback(new Error('OAuth 2.0 authentication requires session support when using state. Did you forget to use express-session middleware?')); }\n\n  var key = this._key;\n  if (!req.session[key]) {\n    return callback(null, false, { message: 'Unable to verify authorization request state.' });\n  }\n\n  var state = req.session[key].state;\n  if (!state) {\n    return callback(null, false, { message: 'Unable to verify authorization request state.' });\n  }\n\n  delete req.session[key].state;\n  if (Object.keys(req.session[key]).length === 0) {\n    delete req.session[key];\n  }\n\n  if (state.handle !== providedState) {\n    return callback(null, false, { message: 'Invalid authorization request state.' });\n  }\n\n  return callback(null, state.code_verifier, state.state);\n};\n\n// Expose constructor.\nmodule.exports = PKCESessionStore;\n","/**\n * `AuthorizationError` error.\n *\n * AuthorizationError represents an error in response to an authorization\n * request.  For details, refer to RFC 6749, section 4.1.2.1.\n *\n * References:\n *   - [The OAuth 2.0 Authorization Framework](http://tools.ietf.org/html/rfc6749)\n *\n * @constructor\n * @param {String} [message]\n * @param {String} [code]\n * @param {String} [uri]\n * @param {Number} [status]\n * @api public\n */\nfunction AuthorizationError(message, code, uri, status) {\n  if (!status) {\n    switch (code) {\n      case 'access_denied': status = 403; break;\n      case 'server_error': status = 502; break;\n      case 'temporarily_unavailable': status = 503; break;\n    }\n  }\n\n  Error.call(this);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n  this.message = message;\n  this.code = code || 'server_error';\n  this.uri = uri;\n  this.status = status || 500;\n}\n\n/**\n * Inherit from `Error`.\n */\nAuthorizationError.prototype.__proto__ = Error.prototype;\n\n\n/**\n * Expose `AuthorizationError`.\n */\nmodule.exports = AuthorizationError;\n","/**\n * `TokenError` error.\n *\n * TokenError represents an error received from a token endpoint.  For details,\n * refer to RFC 6749, section 5.2.\n *\n * References:\n *   - [The OAuth 2.0 Authorization Framework](http://tools.ietf.org/html/rfc6749)\n *\n * @constructor\n * @param {String} [message]\n * @param {String} [code]\n * @param {String} [uri]\n * @param {Number} [status]\n * @api public\n */\nfunction TokenError(message, code, uri, status) {\n  Error.call(this);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n  this.message = message;\n  this.code = code || 'invalid_request';\n  this.uri = uri;\n  this.status = status || 500;\n}\n\n/**\n * Inherit from `Error`.\n */\nTokenError.prototype.__proto__ = Error.prototype;\n\n\n/**\n * Expose `TokenError`.\n */\nmodule.exports = TokenError;\n","/**\n * `InternalOAuthError` error.\n *\n * InternalOAuthError wraps errors generated by node-oauth.  By wrapping these\n * objects, error messages can be formatted in a manner that aids in debugging\n * OAuth issues.\n *\n * @constructor\n * @param {String} [message]\n * @param {Object|Error} [err]\n * @api public\n */\nfunction InternalOAuthError(message, err) {\n  Error.call(this);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n  this.message = message;\n  this.oauthError = err;\n}\n\n/**\n * Inherit from `Error`.\n */\nInternalOAuthError.prototype.__proto__ = Error.prototype;\n\n/**\n * Returns a string representing the error.\n *\n * @return {String}\n * @api public\n */\nInternalOAuthError.prototype.toString = function() {\n  var m = this.name;\n  if (this.message) { m += ': ' + this.message; }\n  if (this.oauthError) {\n    if (this.oauthError instanceof Error) {\n      m = this.oauthError.toString();\n    } else if (this.oauthError.statusCode && this.oauthError.data) {\n      m += ' (status: ' + this.oauthError.statusCode + ' data: ' + this.oauthError.data + ')';\n    }\n  }\n  return m;\n};\n\n\n/**\n * Expose `InternalOAuthError`.\n */\nmodule.exports = InternalOAuthError;\n","/**\n * Parse profile.\n *\n * Parses user profiles as fetched from Google's Google+ API.\n *\n * The amount of detail in the profile varies based on the scopes granted by the\n * user.  The following scope values add additional data:\n *\n *     `https://www.googleapis.com/auth/plus.login` - recommended login scope\n *     `profile` - basic profile information\n *     `email` - email address\n *\n * References:\n *   - https://developers.google.com/+/web/api/rest/latest/people/get\n *   - https://developers.google.com/+/web/api/rest/\n *   - https://developers.google.com/+/web/api/rest/oauth\n *\n * @param {object|string} json\n * @return {object}\n * @access public\n */\nexports.parse = function(json) {\n  if ('string' == typeof json) {\n    json = JSON.parse(json);\n  }\n  \n  var profile = {}\n    , i, len;\n  profile.id = json.id;\n  profile.displayName = json.displayName;\n  if (json.name) {\n    profile.name = { familyName: json.name.familyName,\n                     givenName: json.name.givenName };\n  }\n  if (json.emails) {\n    profile.emails = [];\n    for (i = 0, len = json.emails.length; i < len; ++i) {\n      profile.emails.push({ value: json.emails[i].value, type: json.emails[i].type })\n    }\n  }\n  if (json.image) {\n    profile.photos = [{ value: json.image.url }];\n  }\n  profile.gender = json.gender;\n  \n  return profile;\n};\n","/**\n * Parse profile.\n *\n * Parses user profiles as fetched from Google's OpenID Connect-compatible user\n * info endpoint.\n *\n * The amount of detail in the profile varies based on the scopes granted by the\n * user.  The following scope values add additional data:\n *\n *     `profile` - basic profile information\n *     `email` - email address\n *\n * References:\n *   - https://developers.google.com/identity/protocols/OpenIDConnect\n *\n * @param {object|string} json\n * @return {object}\n * @access public\n */\nexports.parse = function(json) {\n  if ('string' == typeof json) {\n    json = JSON.parse(json);\n  }\n  \n  var profile = {};\n  profile.id = json.sub;\n  profile.displayName = json.name;\n  if (json.family_name || json.given_name) {\n    profile.name = { familyName: json.family_name,\n                     givenName: json.given_name };\n  }\n  if (json.email) {\n    profile.emails = [ { value: json.email, verified: json.email_verified } ];\n  }\n  if (json.picture) {\n    profile.photos = [{ value: json.picture }];\n  }\n  \n  return profile;\n};\n","/**\n * `GooglePlusAPIError` error.\n *\n * References:\n *   - https://developers.google.com/+/web/api/rest/\n *\n * @constructor\n * @param {string} [message]\n * @param {number} [code]\n * @access public\n */\nfunction GooglePlusAPIError(message, code) {\n  Error.call(this);\n  Error.captureStackTrace(this, arguments.callee);\n  this.name = 'GooglePlusAPIError';\n  this.message = message;\n  this.code = code;\n}\n\n// Inherit from `Error`.\nGooglePlusAPIError.prototype.__proto__ = Error.prototype;\n\n\n// Expose constructor.\nmodule.exports = GooglePlusAPIError;\n","/**\n * `UserInfoError` error.\n *\n * @constructor\n * @param {string} [message]\n * @param {string} [code]\n * @access public\n */\nfunction UserInfoError(message, code) {\n  Error.call(this);\n  Error.captureStackTrace(this, arguments.callee);\n  this.name = 'UserInfoError';\n  this.message = message;\n  this.code = code;\n}\n\n// Inherit from `Error`.\nUserInfoError.prototype.__proto__ = Error.prototype;\n\n\n// Expose constructor.\nmodule.exports = UserInfoError;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import express from 'express';\nimport * as path from 'path';\nimport { setUpFireBaseRoutes } from './routes/firebase-routes';\nimport { setUpStripeRoutes } from './routes/stripe-routes';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport dotenv from 'dotenv';\nimport setupGoogleRoutes from './routes/google-auth-routes';\nimport session from 'express-session';\nimport passport from 'passport';\nimport setupAuthStrategies from './auth';\n\ndotenv.config();\n\nconst app = express();\n\nconst corsOptions = {\n  origin: 'http://localhost:4200', // Ensure this matches your React app's URL\n  credentials: true, // This is important: it allows cookies to be sent with requests\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  allowedHeaders: ['Content-Type', 'Authorization'],\n};\n\napp.use(\n  session({\n    secret: 'secret', // Change this in production\n    resave: false,\n    saveUninitialized: false, // Change this if you don't want to store sessions until something is modified\n    cookie: {\n      httpOnly: true, // Recommended: limits access to cookies\n      secure: false, // Set to true if you are using https\n      sameSite: 'none', // Set to 'none' if your React app and Express server are served from different origins\n    },\n  })\n);\n\n// Middleware\napp.use(cors(corsOptions)); // Apply CORS middleware with options\napp.use('/assets', express.static(path.join(__dirname, 'assets')));\napp.use(bodyParser.json());\napp.use(passport.initialize());\napp.use(passport.session());\n\n// Initialize all authentication strategies\nsetupAuthStrategies(passport);\n\n//routes\nsetUpFireBaseRoutes(app);\nsetUpStripeRoutes(app);\nsetupGoogleRoutes(app);\n\napp.get('/api', (req, res) => {\n  res.send({ message: 'Welcome to EmpathicCore!' });\n});\n\napp.get('/', (req, res) => {\n  res.send('Hello world');\n});\n\nconst port = process.env.PORT || 3333;\nconst server = app.listen(port, () => {\n  console.log(`Listening at http://localhost:${port}/api`);\n});\nserver.on('error', console.error);\n"],"names":[],"sourceRoot":""}